//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Alert_AlertType", "AlertType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.AlertType), "Alert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Alert), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_AlertType_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.Company), "AlertType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.AlertType), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Trip_CalificationTrip", "CalificationTrip", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.CalificationTrip), "Trip", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Trip), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Car_CarSize", "CarSize", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.CarSize), "Car", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Car), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_User_Car", "Car", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.Car), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.User), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_UserCar_Car", "Car", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Car), "UserCar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.UserCar), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_CarSize_Car", "CarSize", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.CarSize), "CarSize1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.CarSize), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_City_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.State), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.City), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Company_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.City), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Company), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_CompanyPartnerCompany_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Company), "CompanyPartnerCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.CompanyPartnerCompany), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_ReferencesPoint_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Company), "ReferencesPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.ReferencesPoint), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_User_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.Company), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.User), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Zone_Zone", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Company), "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Zone), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_CompanyPartnerCompany_PartnerCompany", "PartnerCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.PartnerCompany), "CompanyPartnerCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.CompanyPartnerCompany), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_UserPartnerCompany_CompanyPartnerCompany", "CompanyPartnerCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.CompanyPartnerCompany), "UserPartnerCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.UserPartnerCompany), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Coordinate_Zone", "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Zone), "Coordinate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Coordinate), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_State_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Country), "State", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.State), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_UserFleet_Fleet", "Fleet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Fleet), "UserFleet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.UserFleet), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_User_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Gender), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.User), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_LoginAudit_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.User), "LoginAudit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.LoginAudit), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Message_MessageState", "MessageState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.MessageState), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Message), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Message_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Message), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_MessageRecipient_Message", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Message), "MessageRecipient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.MessageRecipient), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_PushEvent_Message", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.Message), "PushEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.PushEvent), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_MessageRecipient_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.User), "MessageRecipient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.MessageRecipient), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_PushEvent_PushEventState", "PushEventState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.PushEventState), "PushEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.PushEvent), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_PushEvent_PushEventType", "PushEventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.PushEventType), "PushEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.PushEvent), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_PushEvent_Trip", "Trip", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.Trip), "PushEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.PushEvent), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_PushEventUser_PushEvent", "PushEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.PushEvent), "PushEventUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.PushEventUser), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_PushEventUser_PushEventUserState", "PushEventUserState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.PushEventUserState), "PushEventUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.PushEventUser), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_PushEventUser_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.User), "PushEventUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.PushEventUser), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_User_TaxiState", "TaxiState", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.TaxiState), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.User), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_TrackingInfo_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.User), "TrackingInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.TrackingInfo), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Trip_Trip", "Trip", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Trip), "Trip1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.Trip), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Trip_TripState", "TripState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.TripState), "Trip", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Trip), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Trip_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.User), "Trip", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Trip), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_Trip_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.User), "Trip", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.Trip), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_TripLog_Trip", "Trip", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.Trip), "TripLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.TripLog), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_TripLog_TripState", "TripState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.TripState), "TripLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.TripLog), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_TripLog_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TaxiGuardian.Logic.Model.User), "TripLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.TripLog), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_User_UserStatus", "UserStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.UserStatus), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.User), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_User_UserType", "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.UserType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.User), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_UserCar_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.User), "UserCar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.UserCar), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "FK_UserFleet_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TaxiGuardian.Logic.Model.User), "UserFleet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.UserFleet), true)]
[assembly: EdmRelationshipAttribute("TaxiGuardianModel", "MenuItemUserType", "MenuItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.MenuItem), "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TaxiGuardian.Logic.Model.UserType))]

#endregion

namespace TaxiGuardian.Logic.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Alert> Alert
        {
            get
            {
                if ((_Alert == null))
                {
                    _Alert = base.CreateObjectSet<Alert>("Alert");
                }
                return _Alert;
            }
        }
        private ObjectSet<Alert> _Alert;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlertType> AlertType
        {
            get
            {
                if ((_AlertType == null))
                {
                    _AlertType = base.CreateObjectSet<AlertType>("AlertType");
                }
                return _AlertType;
            }
        }
        private ObjectSet<AlertType> _AlertType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalificationTrip> CalificationTrip
        {
            get
            {
                if ((_CalificationTrip == null))
                {
                    _CalificationTrip = base.CreateObjectSet<CalificationTrip>("CalificationTrip");
                }
                return _CalificationTrip;
            }
        }
        private ObjectSet<CalificationTrip> _CalificationTrip;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Car> Car
        {
            get
            {
                if ((_Car == null))
                {
                    _Car = base.CreateObjectSet<Car>("Car");
                }
                return _Car;
            }
        }
        private ObjectSet<Car> _Car;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarSize> CarSize
        {
            get
            {
                if ((_CarSize == null))
                {
                    _CarSize = base.CreateObjectSet<CarSize>("CarSize");
                }
                return _CarSize;
            }
        }
        private ObjectSet<CarSize> _CarSize;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> City
        {
            get
            {
                if ((_City == null))
                {
                    _City = base.CreateObjectSet<City>("City");
                }
                return _City;
            }
        }
        private ObjectSet<City> _City;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Company
        {
            get
            {
                if ((_Company == null))
                {
                    _Company = base.CreateObjectSet<Company>("Company");
                }
                return _Company;
            }
        }
        private ObjectSet<Company> _Company;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyPartnerCompany> CompanyPartnerCompany
        {
            get
            {
                if ((_CompanyPartnerCompany == null))
                {
                    _CompanyPartnerCompany = base.CreateObjectSet<CompanyPartnerCompany>("CompanyPartnerCompany");
                }
                return _CompanyPartnerCompany;
            }
        }
        private ObjectSet<CompanyPartnerCompany> _CompanyPartnerCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coordinate> Coordinate
        {
            get
            {
                if ((_Coordinate == null))
                {
                    _Coordinate = base.CreateObjectSet<Coordinate>("Coordinate");
                }
                return _Coordinate;
            }
        }
        private ObjectSet<Coordinate> _Coordinate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Country
        {
            get
            {
                if ((_Country == null))
                {
                    _Country = base.CreateObjectSet<Country>("Country");
                }
                return _Country;
            }
        }
        private ObjectSet<Country> _Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fleet> Fleet
        {
            get
            {
                if ((_Fleet == null))
                {
                    _Fleet = base.CreateObjectSet<Fleet>("Fleet");
                }
                return _Fleet;
            }
        }
        private ObjectSet<Fleet> _Fleet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gender> Gender
        {
            get
            {
                if ((_Gender == null))
                {
                    _Gender = base.CreateObjectSet<Gender>("Gender");
                }
                return _Gender;
            }
        }
        private ObjectSet<Gender> _Gender;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoginAudit> LoginAudit
        {
            get
            {
                if ((_LoginAudit == null))
                {
                    _LoginAudit = base.CreateObjectSet<LoginAudit>("LoginAudit");
                }
                return _LoginAudit;
            }
        }
        private ObjectSet<LoginAudit> _LoginAudit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MenuItem> MenuItem
        {
            get
            {
                if ((_MenuItem == null))
                {
                    _MenuItem = base.CreateObjectSet<MenuItem>("MenuItem");
                }
                return _MenuItem;
            }
        }
        private ObjectSet<MenuItem> _MenuItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Message
        {
            get
            {
                if ((_Message == null))
                {
                    _Message = base.CreateObjectSet<Message>("Message");
                }
                return _Message;
            }
        }
        private ObjectSet<Message> _Message;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageRecipient> MessageRecipient
        {
            get
            {
                if ((_MessageRecipient == null))
                {
                    _MessageRecipient = base.CreateObjectSet<MessageRecipient>("MessageRecipient");
                }
                return _MessageRecipient;
            }
        }
        private ObjectSet<MessageRecipient> _MessageRecipient;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageState> MessageState
        {
            get
            {
                if ((_MessageState == null))
                {
                    _MessageState = base.CreateObjectSet<MessageState>("MessageState");
                }
                return _MessageState;
            }
        }
        private ObjectSet<MessageState> _MessageState;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> Parameter
        {
            get
            {
                if ((_Parameter == null))
                {
                    _Parameter = base.CreateObjectSet<Parameter>("Parameter");
                }
                return _Parameter;
            }
        }
        private ObjectSet<Parameter> _Parameter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PartnerCompany> PartnerCompany
        {
            get
            {
                if ((_PartnerCompany == null))
                {
                    _PartnerCompany = base.CreateObjectSet<PartnerCompany>("PartnerCompany");
                }
                return _PartnerCompany;
            }
        }
        private ObjectSet<PartnerCompany> _PartnerCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PushEvent> PushEvent
        {
            get
            {
                if ((_PushEvent == null))
                {
                    _PushEvent = base.CreateObjectSet<PushEvent>("PushEvent");
                }
                return _PushEvent;
            }
        }
        private ObjectSet<PushEvent> _PushEvent;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PushEventState> PushEventState
        {
            get
            {
                if ((_PushEventState == null))
                {
                    _PushEventState = base.CreateObjectSet<PushEventState>("PushEventState");
                }
                return _PushEventState;
            }
        }
        private ObjectSet<PushEventState> _PushEventState;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PushEventType> PushEventType
        {
            get
            {
                if ((_PushEventType == null))
                {
                    _PushEventType = base.CreateObjectSet<PushEventType>("PushEventType");
                }
                return _PushEventType;
            }
        }
        private ObjectSet<PushEventType> _PushEventType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PushEventUser> PushEventUser
        {
            get
            {
                if ((_PushEventUser == null))
                {
                    _PushEventUser = base.CreateObjectSet<PushEventUser>("PushEventUser");
                }
                return _PushEventUser;
            }
        }
        private ObjectSet<PushEventUser> _PushEventUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PushEventUserState> PushEventUserState
        {
            get
            {
                if ((_PushEventUserState == null))
                {
                    _PushEventUserState = base.CreateObjectSet<PushEventUserState>("PushEventUserState");
                }
                return _PushEventUserState;
            }
        }
        private ObjectSet<PushEventUserState> _PushEventUserState;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReferencesPoint> ReferencesPoint
        {
            get
            {
                if ((_ReferencesPoint == null))
                {
                    _ReferencesPoint = base.CreateObjectSet<ReferencesPoint>("ReferencesPoint");
                }
                return _ReferencesPoint;
            }
        }
        private ObjectSet<ReferencesPoint> _ReferencesPoint;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Server> Server
        {
            get
            {
                if ((_Server == null))
                {
                    _Server = base.CreateObjectSet<Server>("Server");
                }
                return _Server;
            }
        }
        private ObjectSet<Server> _Server;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> State
        {
            get
            {
                if ((_State == null))
                {
                    _State = base.CreateObjectSet<State>("State");
                }
                return _State;
            }
        }
        private ObjectSet<State> _State;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaxiState> TaxiState
        {
            get
            {
                if ((_TaxiState == null))
                {
                    _TaxiState = base.CreateObjectSet<TaxiState>("TaxiState");
                }
                return _TaxiState;
            }
        }
        private ObjectSet<TaxiState> _TaxiState;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackingInfo> TrackingInfo
        {
            get
            {
                if ((_TrackingInfo == null))
                {
                    _TrackingInfo = base.CreateObjectSet<TrackingInfo>("TrackingInfo");
                }
                return _TrackingInfo;
            }
        }
        private ObjectSet<TrackingInfo> _TrackingInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trip> Trip
        {
            get
            {
                if ((_Trip == null))
                {
                    _Trip = base.CreateObjectSet<Trip>("Trip");
                }
                return _Trip;
            }
        }
        private ObjectSet<Trip> _Trip;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TripLog> TripLog
        {
            get
            {
                if ((_TripLog == null))
                {
                    _TripLog = base.CreateObjectSet<TripLog>("TripLog");
                }
                return _TripLog;
            }
        }
        private ObjectSet<TripLog> _TripLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TripState> TripState
        {
            get
            {
                if ((_TripState == null))
                {
                    _TripState = base.CreateObjectSet<TripState>("TripState");
                }
                return _TripState;
            }
        }
        private ObjectSet<TripState> _TripState;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserCar> UserCar
        {
            get
            {
                if ((_UserCar == null))
                {
                    _UserCar = base.CreateObjectSet<UserCar>("UserCar");
                }
                return _UserCar;
            }
        }
        private ObjectSet<UserCar> _UserCar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserFleet> UserFleet
        {
            get
            {
                if ((_UserFleet == null))
                {
                    _UserFleet = base.CreateObjectSet<UserFleet>("UserFleet");
                }
                return _UserFleet;
            }
        }
        private ObjectSet<UserFleet> _UserFleet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPartnerCompany> UserPartnerCompany
        {
            get
            {
                if ((_UserPartnerCompany == null))
                {
                    _UserPartnerCompany = base.CreateObjectSet<UserPartnerCompany>("UserPartnerCompany");
                }
                return _UserPartnerCompany;
            }
        }
        private ObjectSet<UserPartnerCompany> _UserPartnerCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserStatus> UserStatus
        {
            get
            {
                if ((_UserStatus == null))
                {
                    _UserStatus = base.CreateObjectSet<UserStatus>("UserStatus");
                }
                return _UserStatus;
            }
        }
        private ObjectSet<UserStatus> _UserStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserType
        {
            get
            {
                if ((_UserType == null))
                {
                    _UserType = base.CreateObjectSet<UserType>("UserType");
                }
                return _UserType;
            }
        }
        private ObjectSet<UserType> _UserType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Zone> Zone
        {
            get
            {
                if ((_Zone == null))
                {
                    _Zone = base.CreateObjectSet<Zone>("Zone");
                }
                return _Zone;
            }
        }
        private ObjectSet<Zone> _Zone;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Alert EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlert(Alert alert)
        {
            base.AddObject("Alert", alert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlertType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlertType(AlertType alertType)
        {
            base.AddObject("AlertType", alertType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalificationTrip EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalificationTrip(CalificationTrip calificationTrip)
        {
            base.AddObject("CalificationTrip", calificationTrip);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Car EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCar(Car car)
        {
            base.AddObject("Car", car);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarSize EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarSize(CarSize carSize)
        {
            base.AddObject("CarSize", carSize);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the City EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCity(City city)
        {
            base.AddObject("City", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Company EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompany(Company company)
        {
            base.AddObject("Company", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyPartnerCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyPartnerCompany(CompanyPartnerCompany companyPartnerCompany)
        {
            base.AddObject("CompanyPartnerCompany", companyPartnerCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coordinate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoordinate(Coordinate coordinate)
        {
            base.AddObject("Coordinate", coordinate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountry(Country country)
        {
            base.AddObject("Country", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fleet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFleet(Fleet fleet)
        {
            base.AddObject("Fleet", fleet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Gender EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGender(Gender gender)
        {
            base.AddObject("Gender", gender);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoginAudit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoginAudit(LoginAudit loginAudit)
        {
            base.AddObject("LoginAudit", loginAudit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MenuItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenuItem(MenuItem menuItem)
        {
            base.AddObject("MenuItem", menuItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Message EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessage(Message message)
        {
            base.AddObject("Message", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageRecipient EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageRecipient(MessageRecipient messageRecipient)
        {
            base.AddObject("MessageRecipient", messageRecipient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageState EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageState(MessageState messageState)
        {
            base.AddObject("MessageState", messageState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameter(Parameter parameter)
        {
            base.AddObject("Parameter", parameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PartnerCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartnerCompany(PartnerCompany partnerCompany)
        {
            base.AddObject("PartnerCompany", partnerCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PushEvent EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPushEvent(PushEvent pushEvent)
        {
            base.AddObject("PushEvent", pushEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PushEventState EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPushEventState(PushEventState pushEventState)
        {
            base.AddObject("PushEventState", pushEventState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PushEventType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPushEventType(PushEventType pushEventType)
        {
            base.AddObject("PushEventType", pushEventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PushEventUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPushEventUser(PushEventUser pushEventUser)
        {
            base.AddObject("PushEventUser", pushEventUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PushEventUserState EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPushEventUserState(PushEventUserState pushEventUserState)
        {
            base.AddObject("PushEventUserState", pushEventUserState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReferencesPoint EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReferencesPoint(ReferencesPoint referencesPoint)
        {
            base.AddObject("ReferencesPoint", referencesPoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Server EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServer(Server server)
        {
            base.AddObject("Server", server);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the State EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToState(State state)
        {
            base.AddObject("State", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaxiState EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxiState(TaxiState taxiState)
        {
            base.AddObject("TaxiState", taxiState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackingInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackingInfo(TrackingInfo trackingInfo)
        {
            base.AddObject("TrackingInfo", trackingInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trip EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrip(Trip trip)
        {
            base.AddObject("Trip", trip);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TripLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTripLog(TripLog tripLog)
        {
            base.AddObject("TripLog", tripLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TripState EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTripState(TripState tripState)
        {
            base.AddObject("TripState", tripState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserCar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserCar(UserCar userCar)
        {
            base.AddObject("UserCar", userCar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserFleet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserFleet(UserFleet userFleet)
        {
            base.AddObject("UserFleet", userFleet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPartnerCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPartnerCompany(UserPartnerCompany userPartnerCompany)
        {
            base.AddObject("UserPartnerCompany", userPartnerCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserStatus(UserStatus userStatus)
        {
            base.AddObject("UserStatus", userStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserType(UserType userType)
        {
            base.AddObject("UserType", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Zone EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZone(Zone zone)
        {
            base.AddObject("Zone", zone);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Alert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Alert object.
        /// </summary>
        /// <param name="alertID">Initial value of the AlertID property.</param>
        /// <param name="alertTypeID">Initial value of the AlertTypeID property.</param>
        /// <param name="alertDateTime">Initial value of the AlertDateTime property.</param>
        /// <param name="userIDCreation">Initial value of the UserIDCreation property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="alertState">Initial value of the AlertState property.</param>
        public static Alert CreateAlert(global::System.Int32 alertID, global::System.Int32 alertTypeID, global::System.DateTime alertDateTime, global::System.Int32 userIDCreation, global::System.Int32 userID, global::System.Int32 alertState)
        {
            Alert alert = new Alert();
            alert.AlertID = alertID;
            alert.AlertTypeID = alertTypeID;
            alert.AlertDateTime = alertDateTime;
            alert.UserIDCreation = userIDCreation;
            alert.UserID = userID;
            alert.AlertState = alertState;
            return alert;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertID
        {
            get
            {
                return _AlertID;
            }
            set
            {
                if (_AlertID != value)
                {
                    OnAlertIDChanging(value);
                    ReportPropertyChanging("AlertID");
                    _AlertID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlertID");
                    OnAlertIDChanged();
                }
            }
        }
        private global::System.Int32 _AlertID;
        partial void OnAlertIDChanging(global::System.Int32 value);
        partial void OnAlertIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlertName
        {
            get
            {
                return _AlertName;
            }
            set
            {
                OnAlertNameChanging(value);
                ReportPropertyChanging("AlertName");
                _AlertName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AlertName");
                OnAlertNameChanged();
            }
        }
        private global::System.String _AlertName;
        partial void OnAlertNameChanging(global::System.String value);
        partial void OnAlertNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertTypeID
        {
            get
            {
                return _AlertTypeID;
            }
            set
            {
                OnAlertTypeIDChanging(value);
                ReportPropertyChanging("AlertTypeID");
                _AlertTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertTypeID");
                OnAlertTypeIDChanged();
            }
        }
        private global::System.Int32 _AlertTypeID;
        partial void OnAlertTypeIDChanging(global::System.Int32 value);
        partial void OnAlertTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AlertDateTime
        {
            get
            {
                return _AlertDateTime;
            }
            set
            {
                OnAlertDateTimeChanging(value);
                ReportPropertyChanging("AlertDateTime");
                _AlertDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertDateTime");
                OnAlertDateTimeChanged();
            }
        }
        private global::System.DateTime _AlertDateTime;
        partial void OnAlertDateTimeChanging(global::System.DateTime value);
        partial void OnAlertDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserIDCreation
        {
            get
            {
                return _UserIDCreation;
            }
            set
            {
                OnUserIDCreationChanging(value);
                ReportPropertyChanging("UserIDCreation");
                _UserIDCreation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserIDCreation");
                OnUserIDCreationChanged();
            }
        }
        private global::System.Int32 _UserIDCreation;
        partial void OnUserIDCreationChanging(global::System.Int32 value);
        partial void OnUserIDCreationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlertDescription
        {
            get
            {
                return _AlertDescription;
            }
            set
            {
                OnAlertDescriptionChanging(value);
                ReportPropertyChanging("AlertDescription");
                _AlertDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AlertDescription");
                OnAlertDescriptionChanged();
            }
        }
        private global::System.String _AlertDescription;
        partial void OnAlertDescriptionChanging(global::System.String value);
        partial void OnAlertDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressPosition
        {
            get
            {
                return _AddressPosition;
            }
            set
            {
                OnAddressPositionChanging(value);
                ReportPropertyChanging("AddressPosition");
                _AddressPosition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressPosition");
                OnAddressPositionChanged();
            }
        }
        private global::System.String _AddressPosition;
        partial void OnAddressPositionChanging(global::System.String value);
        partial void OnAddressPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertState
        {
            get
            {
                return _AlertState;
            }
            set
            {
                OnAlertStateChanging(value);
                ReportPropertyChanging("AlertState");
                _AlertState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertState");
                OnAlertStateChanged();
            }
        }
        private global::System.Int32 _AlertState;
        partial void OnAlertStateChanging(global::System.Int32 value);
        partial void OnAlertStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Alert_AlertType", "AlertType")]
        public AlertType AlertType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlertType>("TaxiGuardianModel.FK_Alert_AlertType", "AlertType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlertType>("TaxiGuardianModel.FK_Alert_AlertType", "AlertType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AlertType> AlertTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlertType>("TaxiGuardianModel.FK_Alert_AlertType", "AlertType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AlertType>("TaxiGuardianModel.FK_Alert_AlertType", "AlertType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="AlertType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlertType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlertType object.
        /// </summary>
        /// <param name="alertTypeID">Initial value of the AlertTypeID property.</param>
        /// <param name="alertTypeName">Initial value of the AlertTypeName property.</param>
        /// <param name="priorityLevel">Initial value of the PriorityLevel property.</param>
        public static AlertType CreateAlertType(global::System.Int32 alertTypeID, global::System.String alertTypeName, global::System.Int32 priorityLevel)
        {
            AlertType alertType = new AlertType();
            alertType.AlertTypeID = alertTypeID;
            alertType.AlertTypeName = alertTypeName;
            alertType.PriorityLevel = priorityLevel;
            return alertType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertTypeID
        {
            get
            {
                return _AlertTypeID;
            }
            set
            {
                if (_AlertTypeID != value)
                {
                    OnAlertTypeIDChanging(value);
                    ReportPropertyChanging("AlertTypeID");
                    _AlertTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlertTypeID");
                    OnAlertTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AlertTypeID;
        partial void OnAlertTypeIDChanging(global::System.Int32 value);
        partial void OnAlertTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AlertTypeName
        {
            get
            {
                return _AlertTypeName;
            }
            set
            {
                OnAlertTypeNameChanging(value);
                ReportPropertyChanging("AlertTypeName");
                _AlertTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AlertTypeName");
                OnAlertTypeNameChanged();
            }
        }
        private global::System.String _AlertTypeName;
        partial void OnAlertTypeNameChanging(global::System.String value);
        partial void OnAlertTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityLevel
        {
            get
            {
                return _PriorityLevel;
            }
            set
            {
                OnPriorityLevelChanging(value);
                ReportPropertyChanging("PriorityLevel");
                _PriorityLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityLevel");
                OnPriorityLevelChanged();
            }
        }
        private global::System.Int32 _PriorityLevel;
        partial void OnPriorityLevelChanging(global::System.Int32 value);
        partial void OnPriorityLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Alert_AlertType", "Alert")]
        public EntityCollection<Alert> Alert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Alert>("TaxiGuardianModel.FK_Alert_AlertType", "Alert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Alert>("TaxiGuardianModel.FK_Alert_AlertType", "Alert", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_AlertType_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_AlertType_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_AlertType_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_AlertType_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("TaxiGuardianModel.FK_AlertType_Company", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="CalificationTrip")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalificationTrip : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalificationTrip object.
        /// </summary>
        /// <param name="calificationTripID">Initial value of the CalificationTripID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static CalificationTrip CreateCalificationTrip(global::System.Int32 calificationTripID, global::System.String description)
        {
            CalificationTrip calificationTrip = new CalificationTrip();
            calificationTrip.CalificationTripID = calificationTripID;
            calificationTrip.Description = description;
            return calificationTrip;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalificationTripID
        {
            get
            {
                return _CalificationTripID;
            }
            set
            {
                if (_CalificationTripID != value)
                {
                    OnCalificationTripIDChanging(value);
                    ReportPropertyChanging("CalificationTripID");
                    _CalificationTripID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalificationTripID");
                    OnCalificationTripIDChanged();
                }
            }
        }
        private global::System.Int32 _CalificationTripID;
        partial void OnCalificationTripIDChanging(global::System.Int32 value);
        partial void OnCalificationTripIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_CalificationTrip", "Trip")]
        public EntityCollection<Trip> Trip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trip>("TaxiGuardianModel.FK_Trip_CalificationTrip", "Trip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trip>("TaxiGuardianModel.FK_Trip_CalificationTrip", "Trip", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Car")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Car : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Car object.
        /// </summary>
        /// <param name="carID">Initial value of the CarID property.</param>
        /// <param name="brand">Initial value of the Brand property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="licencePlate">Initial value of the LicencePlate property.</param>
        /// <param name="taxiPermission">Initial value of the TaxiPermission property.</param>
        /// <param name="ownerName">Initial value of the OwnerName property.</param>
        /// <param name="ownerLastName">Initial value of the OwnerLastName property.</param>
        /// <param name="ownerPhone">Initial value of the OwnerPhone property.</param>
        /// <param name="ownerEmail">Initial value of the OwnerEmail property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="airConditioner">Initial value of the AirConditioner property.</param>
        /// <param name="trunk">Initial value of the Trunk property.</param>
        /// <param name="carSizeID">Initial value of the CarSizeID property.</param>
        public static Car CreateCar(global::System.Int32 carID, global::System.String brand, global::System.String model, global::System.Int32 year, global::System.String color, global::System.String licencePlate, global::System.String taxiPermission, global::System.String ownerName, global::System.String ownerLastName, global::System.String ownerPhone, global::System.String ownerEmail, global::System.Int32 companyID, global::System.Boolean airConditioner, global::System.Boolean trunk, global::System.Int32 carSizeID)
        {
            Car car = new Car();
            car.CarID = carID;
            car.Brand = brand;
            car.Model = model;
            car.Year = year;
            car.Color = color;
            car.LicencePlate = licencePlate;
            car.TaxiPermission = taxiPermission;
            car.OwnerName = ownerName;
            car.OwnerLastName = ownerLastName;
            car.OwnerPhone = ownerPhone;
            car.OwnerEmail = ownerEmail;
            car.CompanyID = companyID;
            car.AirConditioner = airConditioner;
            car.Trunk = trunk;
            car.CarSizeID = carSizeID;
            return car;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarID
        {
            get
            {
                return _CarID;
            }
            set
            {
                if (_CarID != value)
                {
                    OnCarIDChanging(value);
                    ReportPropertyChanging("CarID");
                    _CarID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarID");
                    OnCarIDChanged();
                }
            }
        }
        private global::System.Int32 _CarID;
        partial void OnCarIDChanging(global::System.Int32 value);
        partial void OnCarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicencePlate
        {
            get
            {
                return _LicencePlate;
            }
            set
            {
                OnLicencePlateChanging(value);
                ReportPropertyChanging("LicencePlate");
                _LicencePlate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicencePlate");
                OnLicencePlateChanged();
            }
        }
        private global::System.String _LicencePlate;
        partial void OnLicencePlateChanging(global::System.String value);
        partial void OnLicencePlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxiPermission
        {
            get
            {
                return _TaxiPermission;
            }
            set
            {
                OnTaxiPermissionChanging(value);
                ReportPropertyChanging("TaxiPermission");
                _TaxiPermission = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaxiPermission");
                OnTaxiPermissionChanged();
            }
        }
        private global::System.String _TaxiPermission;
        partial void OnTaxiPermissionChanging(global::System.String value);
        partial void OnTaxiPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerName
        {
            get
            {
                return _OwnerName;
            }
            set
            {
                OnOwnerNameChanging(value);
                ReportPropertyChanging("OwnerName");
                _OwnerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OwnerName");
                OnOwnerNameChanged();
            }
        }
        private global::System.String _OwnerName;
        partial void OnOwnerNameChanging(global::System.String value);
        partial void OnOwnerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerLastName
        {
            get
            {
                return _OwnerLastName;
            }
            set
            {
                OnOwnerLastNameChanging(value);
                ReportPropertyChanging("OwnerLastName");
                _OwnerLastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OwnerLastName");
                OnOwnerLastNameChanged();
            }
        }
        private global::System.String _OwnerLastName;
        partial void OnOwnerLastNameChanging(global::System.String value);
        partial void OnOwnerLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerPhone
        {
            get
            {
                return _OwnerPhone;
            }
            set
            {
                OnOwnerPhoneChanging(value);
                ReportPropertyChanging("OwnerPhone");
                _OwnerPhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OwnerPhone");
                OnOwnerPhoneChanged();
            }
        }
        private global::System.String _OwnerPhone;
        partial void OnOwnerPhoneChanging(global::System.String value);
        partial void OnOwnerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerEmail
        {
            get
            {
                return _OwnerEmail;
            }
            set
            {
                OnOwnerEmailChanging(value);
                ReportPropertyChanging("OwnerEmail");
                _OwnerEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OwnerEmail");
                OnOwnerEmailChanged();
            }
        }
        private global::System.String _OwnerEmail;
        partial void OnOwnerEmailChanging(global::System.String value);
        partial void OnOwnerEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AirConditioner
        {
            get
            {
                return _AirConditioner;
            }
            set
            {
                OnAirConditionerChanging(value);
                ReportPropertyChanging("AirConditioner");
                _AirConditioner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AirConditioner");
                OnAirConditionerChanged();
            }
        }
        private global::System.Boolean _AirConditioner;
        partial void OnAirConditionerChanging(global::System.Boolean value);
        partial void OnAirConditionerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Trunk
        {
            get
            {
                return _Trunk;
            }
            set
            {
                OnTrunkChanging(value);
                ReportPropertyChanging("Trunk");
                _Trunk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Trunk");
                OnTrunkChanged();
            }
        }
        private global::System.Boolean _Trunk;
        partial void OnTrunkChanging(global::System.Boolean value);
        partial void OnTrunkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarSizeID
        {
            get
            {
                return _CarSizeID;
            }
            set
            {
                OnCarSizeIDChanging(value);
                ReportPropertyChanging("CarSizeID");
                _CarSizeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarSizeID");
                OnCarSizeIDChanged();
            }
        }
        private global::System.Int32 _CarSizeID;
        partial void OnCarSizeIDChanging(global::System.Int32 value);
        partial void OnCarSizeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Car_CarSize", "CarSize")]
        public CarSize CarSize
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarSize>("TaxiGuardianModel.FK_Car_CarSize", "CarSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarSize>("TaxiGuardianModel.FK_Car_CarSize", "CarSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarSize> CarSizeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarSize>("TaxiGuardianModel.FK_Car_CarSize", "CarSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarSize>("TaxiGuardianModel.FK_Car_CarSize", "CarSize", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_Car", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TaxiGuardianModel.FK_User_Car", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TaxiGuardianModel.FK_User_Car", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserCar_Car", "UserCar")]
        public EntityCollection<UserCar> UserCar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCar>("TaxiGuardianModel.FK_UserCar_Car", "UserCar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCar>("TaxiGuardianModel.FK_UserCar_Car", "UserCar", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="CarSize")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarSize : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarSize object.
        /// </summary>
        /// <param name="carSizeID">Initial value of the CarSizeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static CarSize CreateCarSize(global::System.Int32 carSizeID, global::System.String description)
        {
            CarSize carSize = new CarSize();
            carSize.CarSizeID = carSizeID;
            carSize.Description = description;
            return carSize;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarSizeID
        {
            get
            {
                return _CarSizeID;
            }
            set
            {
                if (_CarSizeID != value)
                {
                    OnCarSizeIDChanging(value);
                    ReportPropertyChanging("CarSizeID");
                    _CarSizeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarSizeID");
                    OnCarSizeIDChanged();
                }
            }
        }
        private global::System.Int32 _CarSizeID;
        partial void OnCarSizeIDChanging(global::System.Int32 value);
        partial void OnCarSizeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Car_CarSize", "Car")]
        public EntityCollection<Car> Car
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Car>("TaxiGuardianModel.FK_Car_CarSize", "Car");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Car>("TaxiGuardianModel.FK_Car_CarSize", "Car", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_CarSize_Car", "CarSize1")]
        public CarSize CarSize1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarSize>("TaxiGuardianModel.FK_CarSize_Car", "CarSize1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarSize>("TaxiGuardianModel.FK_CarSize_Car", "CarSize1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarSize> CarSize1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarSize>("TaxiGuardianModel.FK_CarSize_Car", "CarSize1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarSize>("TaxiGuardianModel.FK_CarSize_Car", "CarSize1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_CarSize_Car", "CarSize")]
        public CarSize CarSize2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarSize>("TaxiGuardianModel.FK_CarSize_Car", "CarSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarSize>("TaxiGuardianModel.FK_CarSize_Car", "CarSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarSize> CarSize2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarSize>("TaxiGuardianModel.FK_CarSize_Car", "CarSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarSize>("TaxiGuardianModel.FK_CarSize_Car", "CarSize", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityID">Initial value of the CityID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="defaultZoomLevel">Initial value of the DefaultZoomLevel property.</param>
        /// <param name="minZoomLevel">Initial value of the MinZoomLevel property.</param>
        /// <param name="zoomThreshold">Initial value of the ZoomThreshold property.</param>
        /// <param name="aliasNames">Initial value of the AliasNames property.</param>
        public static City CreateCity(global::System.Int32 cityID, global::System.String name, global::System.Int32 stateID, global::System.Int32 defaultZoomLevel, global::System.Int32 minZoomLevel, global::System.Int32 zoomThreshold, global::System.String aliasNames)
        {
            City city = new City();
            city.CityID = cityID;
            city.Name = name;
            city.StateID = stateID;
            city.DefaultZoomLevel = defaultZoomLevel;
            city.MinZoomLevel = minZoomLevel;
            city.ZoomThreshold = zoomThreshold;
            city.AliasNames = aliasNames;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefaultZoomLevel
        {
            get
            {
                return _DefaultZoomLevel;
            }
            set
            {
                OnDefaultZoomLevelChanging(value);
                ReportPropertyChanging("DefaultZoomLevel");
                _DefaultZoomLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultZoomLevel");
                OnDefaultZoomLevelChanged();
            }
        }
        private global::System.Int32 _DefaultZoomLevel;
        partial void OnDefaultZoomLevelChanging(global::System.Int32 value);
        partial void OnDefaultZoomLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinZoomLevel
        {
            get
            {
                return _MinZoomLevel;
            }
            set
            {
                OnMinZoomLevelChanging(value);
                ReportPropertyChanging("MinZoomLevel");
                _MinZoomLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinZoomLevel");
                OnMinZoomLevelChanged();
            }
        }
        private global::System.Int32 _MinZoomLevel;
        partial void OnMinZoomLevelChanging(global::System.Int32 value);
        partial void OnMinZoomLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoomThreshold
        {
            get
            {
                return _ZoomThreshold;
            }
            set
            {
                OnZoomThresholdChanging(value);
                ReportPropertyChanging("ZoomThreshold");
                _ZoomThreshold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoomThreshold");
                OnZoomThresholdChanged();
            }
        }
        private global::System.Int32 _ZoomThreshold;
        partial void OnZoomThresholdChanging(global::System.Int32 value);
        partial void OnZoomThresholdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AliasNames
        {
            get
            {
                return _AliasNames;
            }
            set
            {
                OnAliasNamesChanging(value);
                ReportPropertyChanging("AliasNames");
                _AliasNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AliasNames");
                OnAliasNamesChanged();
            }
        }
        private global::System.String _AliasNames;
        partial void OnAliasNamesChanging(global::System.String value);
        partial void OnAliasNamesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_City_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TaxiGuardianModel.FK_City_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TaxiGuardianModel.FK_City_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TaxiGuardianModel.FK_City_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TaxiGuardianModel.FK_City_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Company_City", "Company")]
        public EntityCollection<Company> Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("TaxiGuardianModel.FK_Company_City", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("TaxiGuardianModel.FK_Company_City", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Company CreateCompany(global::System.Int32 companyID, global::System.String companyName, global::System.DateTime creationDate, global::System.Boolean isActive)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.CompanyName = companyName;
            company.CreationDate = creationDate;
            company.IsActive = isActive;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyCode
        {
            get
            {
                return _CompanyCode;
            }
            set
            {
                OnCompanyCodeChanging(value);
                ReportPropertyChanging("CompanyCode");
                _CompanyCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyCode");
                OnCompanyCodeChanged();
            }
        }
        private global::System.String _CompanyCode;
        partial void OnCompanyCodeChanging(global::System.String value);
        partial void OnCompanyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AboutUsText
        {
            get
            {
                return _AboutUsText;
            }
            set
            {
                OnAboutUsTextChanging(value);
                ReportPropertyChanging("AboutUsText");
                _AboutUsText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AboutUsText");
                OnAboutUsTextChanged();
            }
        }
        private global::System.String _AboutUsText;
        partial void OnAboutUsTextChanging(global::System.String value);
        partial void OnAboutUsTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WelcomeText
        {
            get
            {
                return _WelcomeText;
            }
            set
            {
                OnWelcomeTextChanging(value);
                ReportPropertyChanging("WelcomeText");
                _WelcomeText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WelcomeText");
                OnWelcomeTextChanged();
            }
        }
        private global::System.String _WelcomeText;
        partial void OnWelcomeTextChanging(global::System.String value);
        partial void OnWelcomeTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_AlertType_Company", "AlertType")]
        public EntityCollection<AlertType> AlertType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlertType>("TaxiGuardianModel.FK_AlertType_Company", "AlertType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlertType>("TaxiGuardianModel.FK_AlertType_Company", "AlertType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Company_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TaxiGuardianModel.FK_Company_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TaxiGuardianModel.FK_Company_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TaxiGuardianModel.FK_Company_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("TaxiGuardianModel.FK_Company_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_CompanyPartnerCompany_Company", "CompanyPartnerCompany")]
        public EntityCollection<CompanyPartnerCompany> CompanyPartnerCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPartnerCompany>("TaxiGuardianModel.FK_CompanyPartnerCompany_Company", "CompanyPartnerCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPartnerCompany>("TaxiGuardianModel.FK_CompanyPartnerCompany_Company", "CompanyPartnerCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_ReferencesPoint_Company", "ReferencesPoint")]
        public EntityCollection<ReferencesPoint> ReferencesPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReferencesPoint>("TaxiGuardianModel.FK_ReferencesPoint_Company", "ReferencesPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReferencesPoint>("TaxiGuardianModel.FK_ReferencesPoint_Company", "ReferencesPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_Company", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TaxiGuardianModel.FK_User_Company", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TaxiGuardianModel.FK_User_Company", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Zone_Zone", "Zone")]
        public EntityCollection<Zone> Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Zone>("TaxiGuardianModel.FK_Zone_Zone", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Zone>("TaxiGuardianModel.FK_Zone_Zone", "Zone", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="CompanyPartnerCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyPartnerCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyPartnerCompany object.
        /// </summary>
        /// <param name="companyPartnerCompanyID">Initial value of the CompanyPartnerCompanyID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="companyPartnerID">Initial value of the CompanyPartnerID property.</param>
        public static CompanyPartnerCompany CreateCompanyPartnerCompany(global::System.Int32 companyPartnerCompanyID, global::System.Int32 companyID, global::System.Int32 companyPartnerID)
        {
            CompanyPartnerCompany companyPartnerCompany = new CompanyPartnerCompany();
            companyPartnerCompany.CompanyPartnerCompanyID = companyPartnerCompanyID;
            companyPartnerCompany.CompanyID = companyID;
            companyPartnerCompany.CompanyPartnerID = companyPartnerID;
            return companyPartnerCompany;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyPartnerCompanyID
        {
            get
            {
                return _CompanyPartnerCompanyID;
            }
            set
            {
                if (_CompanyPartnerCompanyID != value)
                {
                    OnCompanyPartnerCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyPartnerCompanyID");
                    _CompanyPartnerCompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyPartnerCompanyID");
                    OnCompanyPartnerCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyPartnerCompanyID;
        partial void OnCompanyPartnerCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyPartnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyPartnerID
        {
            get
            {
                return _CompanyPartnerID;
            }
            set
            {
                OnCompanyPartnerIDChanging(value);
                ReportPropertyChanging("CompanyPartnerID");
                _CompanyPartnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyPartnerID");
                OnCompanyPartnerIDChanged();
            }
        }
        private global::System.Int32 _CompanyPartnerID;
        partial void OnCompanyPartnerIDChanging(global::System.Int32 value);
        partial void OnCompanyPartnerIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_CompanyPartnerCompany_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_CompanyPartnerCompany_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_CompanyPartnerCompany_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_CompanyPartnerCompany_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("TaxiGuardianModel.FK_CompanyPartnerCompany_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_CompanyPartnerCompany_PartnerCompany", "PartnerCompany")]
        public PartnerCompany PartnerCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerCompany>("TaxiGuardianModel.FK_CompanyPartnerCompany_PartnerCompany", "PartnerCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerCompany>("TaxiGuardianModel.FK_CompanyPartnerCompany_PartnerCompany", "PartnerCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartnerCompany> PartnerCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerCompany>("TaxiGuardianModel.FK_CompanyPartnerCompany_PartnerCompany", "PartnerCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartnerCompany>("TaxiGuardianModel.FK_CompanyPartnerCompany_PartnerCompany", "PartnerCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserPartnerCompany_CompanyPartnerCompany", "UserPartnerCompany")]
        public EntityCollection<UserPartnerCompany> UserPartnerCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPartnerCompany>("TaxiGuardianModel.FK_UserPartnerCompany_CompanyPartnerCompany", "UserPartnerCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPartnerCompany>("TaxiGuardianModel.FK_UserPartnerCompany_CompanyPartnerCompany", "UserPartnerCompany", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Coordinate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coordinate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coordinate object.
        /// </summary>
        /// <param name="coordinateID">Initial value of the CoordinateID property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        public static Coordinate CreateCoordinate(global::System.Int32 coordinateID, global::System.Double latitude, global::System.Double longitude, global::System.Int32 zoneID)
        {
            Coordinate coordinate = new Coordinate();
            coordinate.CoordinateID = coordinateID;
            coordinate.Latitude = latitude;
            coordinate.Longitude = longitude;
            coordinate.ZoneID = zoneID;
            return coordinate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoordinateID
        {
            get
            {
                return _CoordinateID;
            }
            set
            {
                if (_CoordinateID != value)
                {
                    OnCoordinateIDChanging(value);
                    ReportPropertyChanging("CoordinateID");
                    _CoordinateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoordinateID");
                    OnCoordinateIDChanged();
                }
            }
        }
        private global::System.Int32 _CoordinateID;
        partial void OnCoordinateIDChanging(global::System.Int32 value);
        partial void OnCoordinateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                OnZoneIDChanging(value);
                ReportPropertyChanging("ZoneID");
                _ZoneID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneID");
                OnZoneIDChanged();
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Coordinate_Zone", "Zone")]
        public Zone Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("TaxiGuardianModel.FK_Coordinate_Zone", "Zone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("TaxiGuardianModel.FK_Coordinate_Zone", "Zone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Zone> ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("TaxiGuardianModel.FK_Coordinate_Zone", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Zone>("TaxiGuardianModel.FK_Coordinate_Zone", "Zone", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Country CreateCountry(global::System.Int32 countryID, global::System.String name, global::System.String code)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.Name = name;
            country.Code = code;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_State_Country", "State")]
        public EntityCollection<State> State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<State>("TaxiGuardianModel.FK_State_Country", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<State>("TaxiGuardianModel.FK_State_Country", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Fleet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fleet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fleet object.
        /// </summary>
        /// <param name="fleetID">Initial value of the FleetID property.</param>
        /// <param name="fleetName">Initial value of the FleetName property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="fleetColor">Initial value of the FleetColor property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static Fleet CreateFleet(global::System.Int32 fleetID, global::System.String fleetName, global::System.DateTime creationDate, global::System.Boolean isActive, global::System.String fleetColor, global::System.Int32 companyID)
        {
            Fleet fleet = new Fleet();
            fleet.FleetID = fleetID;
            fleet.FleetName = fleetName;
            fleet.CreationDate = creationDate;
            fleet.IsActive = isActive;
            fleet.FleetColor = fleetColor;
            fleet.CompanyID = companyID;
            return fleet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FleetID
        {
            get
            {
                return _FleetID;
            }
            set
            {
                if (_FleetID != value)
                {
                    OnFleetIDChanging(value);
                    ReportPropertyChanging("FleetID");
                    _FleetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FleetID");
                    OnFleetIDChanged();
                }
            }
        }
        private global::System.Int32 _FleetID;
        partial void OnFleetIDChanging(global::System.Int32 value);
        partial void OnFleetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FleetName
        {
            get
            {
                return _FleetName;
            }
            set
            {
                OnFleetNameChanging(value);
                ReportPropertyChanging("FleetName");
                _FleetName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FleetName");
                OnFleetNameChanged();
            }
        }
        private global::System.String _FleetName;
        partial void OnFleetNameChanging(global::System.String value);
        partial void OnFleetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FleetColor
        {
            get
            {
                return _FleetColor;
            }
            set
            {
                OnFleetColorChanging(value);
                ReportPropertyChanging("FleetColor");
                _FleetColor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FleetColor");
                OnFleetColorChanged();
            }
        }
        private global::System.String _FleetColor;
        partial void OnFleetColorChanging(global::System.String value);
        partial void OnFleetColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserFleet_Fleet", "UserFleet")]
        public EntityCollection<UserFleet> UserFleet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserFleet>("TaxiGuardianModel.FK_UserFleet_Fleet", "UserFleet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserFleet>("TaxiGuardianModel.FK_UserFleet_Fleet", "UserFleet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Gender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gender : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gender object.
        /// </summary>
        /// <param name="genderID">Initial value of the GenderID property.</param>
        /// <param name="genderName">Initial value of the GenderName property.</param>
        public static Gender CreateGender(global::System.Int32 genderID, global::System.String genderName)
        {
            Gender gender = new Gender();
            gender.GenderID = genderID;
            gender.GenderName = genderName;
            return gender;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderID
        {
            get
            {
                return _GenderID;
            }
            set
            {
                if (_GenderID != value)
                {
                    OnGenderIDChanging(value);
                    ReportPropertyChanging("GenderID");
                    _GenderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GenderID");
                    OnGenderIDChanged();
                }
            }
        }
        private global::System.Int32 _GenderID;
        partial void OnGenderIDChanging(global::System.Int32 value);
        partial void OnGenderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenderName
        {
            get
            {
                return _GenderName;
            }
            set
            {
                OnGenderNameChanging(value);
                ReportPropertyChanging("GenderName");
                _GenderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GenderName");
                OnGenderNameChanged();
            }
        }
        private global::System.String _GenderName;
        partial void OnGenderNameChanging(global::System.String value);
        partial void OnGenderNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_Gender", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TaxiGuardianModel.FK_User_Gender", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TaxiGuardianModel.FK_User_Gender", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="LoginAudit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoginAudit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoginAudit object.
        /// </summary>
        /// <param name="loginAuditID">Initial value of the LoginAuditID property.</param>
        /// <param name="loginAuditDate">Initial value of the LoginAuditDate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="iP">Initial value of the IP property.</param>
        public static LoginAudit CreateLoginAudit(global::System.Int32 loginAuditID, global::System.DateTime loginAuditDate, global::System.Int32 userID, global::System.String iP)
        {
            LoginAudit loginAudit = new LoginAudit();
            loginAudit.LoginAuditID = loginAuditID;
            loginAudit.LoginAuditDate = loginAuditDate;
            loginAudit.UserID = userID;
            loginAudit.IP = iP;
            return loginAudit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoginAuditID
        {
            get
            {
                return _LoginAuditID;
            }
            set
            {
                if (_LoginAuditID != value)
                {
                    OnLoginAuditIDChanging(value);
                    ReportPropertyChanging("LoginAuditID");
                    _LoginAuditID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoginAuditID");
                    OnLoginAuditIDChanged();
                }
            }
        }
        private global::System.Int32 _LoginAuditID;
        partial void OnLoginAuditIDChanging(global::System.Int32 value);
        partial void OnLoginAuditIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoginAuditDate
        {
            get
            {
                return _LoginAuditDate;
            }
            set
            {
                OnLoginAuditDateChanging(value);
                ReportPropertyChanging("LoginAuditDate");
                _LoginAuditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginAuditDate");
                OnLoginAuditDateChanged();
            }
        }
        private global::System.DateTime _LoginAuditDate;
        partial void OnLoginAuditDateChanging(global::System.DateTime value);
        partial void OnLoginAuditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IP
        {
            get
            {
                return _IP;
            }
            set
            {
                OnIPChanging(value);
                ReportPropertyChanging("IP");
                _IP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IP");
                OnIPChanged();
            }
        }
        private global::System.String _IP;
        partial void OnIPChanging(global::System.String value);
        partial void OnIPChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_LoginAudit_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_LoginAudit_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_LoginAudit_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_LoginAudit_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_LoginAudit_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="MenuItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuItem object.
        /// </summary>
        /// <param name="menuItemID">Initial value of the MenuItemID property.</param>
        /// <param name="menuItemName">Initial value of the MenuItemName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static MenuItem CreateMenuItem(global::System.Int32 menuItemID, global::System.String menuItemName, global::System.Boolean isActive)
        {
            MenuItem menuItem = new MenuItem();
            menuItem.MenuItemID = menuItemID;
            menuItem.MenuItemName = menuItemName;
            menuItem.IsActive = isActive;
            return menuItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuItemID
        {
            get
            {
                return _MenuItemID;
            }
            set
            {
                if (_MenuItemID != value)
                {
                    OnMenuItemIDChanging(value);
                    ReportPropertyChanging("MenuItemID");
                    _MenuItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MenuItemID");
                    OnMenuItemIDChanged();
                }
            }
        }
        private global::System.Int32 _MenuItemID;
        partial void OnMenuItemIDChanging(global::System.Int32 value);
        partial void OnMenuItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentMenuItemID
        {
            get
            {
                return _ParentMenuItemID;
            }
            set
            {
                OnParentMenuItemIDChanging(value);
                ReportPropertyChanging("ParentMenuItemID");
                _ParentMenuItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentMenuItemID");
                OnParentMenuItemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentMenuItemID;
        partial void OnParentMenuItemIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentMenuItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuItemName
        {
            get
            {
                return _MenuItemName;
            }
            set
            {
                OnMenuItemNameChanging(value);
                ReportPropertyChanging("MenuItemName");
                _MenuItemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MenuItemName");
                OnMenuItemNameChanged();
            }
        }
        private global::System.String _MenuItemName;
        partial void OnMenuItemNameChanging(global::System.String value);
        partial void OnMenuItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "MenuItemUserType", "UserType")]
        public EntityCollection<UserType> UserType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserType>("TaxiGuardianModel.MenuItemUserType", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserType>("TaxiGuardianModel.MenuItemUserType", "UserType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageID">Initial value of the MessageID property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="messageDate">Initial value of the MessageDate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="messageStateID">Initial value of the MessageStateID property.</param>
        /// <param name="isImportant">Initial value of the IsImportant property.</param>
        public static Message CreateMessage(global::System.Int32 messageID, global::System.String body, global::System.DateTime messageDate, global::System.Int32 userID, global::System.Int32 messageStateID, global::System.Boolean isImportant)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.Body = body;
            message.MessageDate = messageDate;
            message.UserID = userID;
            message.MessageStateID = messageStateID;
            message.IsImportant = isImportant;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Int32 _MessageID;
        partial void OnMessageIDChanging(global::System.Int32 value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageDate
        {
            get
            {
                return _MessageDate;
            }
            set
            {
                OnMessageDateChanging(value);
                ReportPropertyChanging("MessageDate");
                _MessageDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageDate");
                OnMessageDateChanged();
            }
        }
        private global::System.DateTime _MessageDate;
        partial void OnMessageDateChanging(global::System.DateTime value);
        partial void OnMessageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageStateID
        {
            get
            {
                return _MessageStateID;
            }
            set
            {
                OnMessageStateIDChanging(value);
                ReportPropertyChanging("MessageStateID");
                _MessageStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageStateID");
                OnMessageStateIDChanged();
            }
        }
        private global::System.Int32 _MessageStateID;
        partial void OnMessageStateIDChanging(global::System.Int32 value);
        partial void OnMessageStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsImportant
        {
            get
            {
                return _IsImportant;
            }
            set
            {
                OnIsImportantChanging(value);
                ReportPropertyChanging("IsImportant");
                _IsImportant = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsImportant");
                OnIsImportantChanged();
            }
        }
        private global::System.Boolean _IsImportant;
        partial void OnIsImportantChanging(global::System.Boolean value);
        partial void OnIsImportantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Message_MessageState", "MessageState")]
        public MessageState MessageState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageState>("TaxiGuardianModel.FK_Message_MessageState", "MessageState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageState>("TaxiGuardianModel.FK_Message_MessageState", "MessageState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MessageState> MessageStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageState>("TaxiGuardianModel.FK_Message_MessageState", "MessageState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MessageState>("TaxiGuardianModel.FK_Message_MessageState", "MessageState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Message_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_Message_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_Message_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_Message_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_Message_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_MessageRecipient_Message", "MessageRecipient")]
        public EntityCollection<MessageRecipient> MessageRecipient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageRecipient>("TaxiGuardianModel.FK_MessageRecipient_Message", "MessageRecipient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageRecipient>("TaxiGuardianModel.FK_MessageRecipient_Message", "MessageRecipient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEvent_Message", "PushEvent")]
        public EntityCollection<PushEvent> PushEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PushEvent>("TaxiGuardianModel.FK_PushEvent_Message", "PushEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PushEvent>("TaxiGuardianModel.FK_PushEvent_Message", "PushEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="MessageRecipient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageRecipient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageRecipient object.
        /// </summary>
        /// <param name="messageID">Initial value of the MessageID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="messageStateID">Initial value of the MessageStateID property.</param>
        public static MessageRecipient CreateMessageRecipient(global::System.Int32 messageID, global::System.Int32 userID, global::System.Int32 messageStateID)
        {
            MessageRecipient messageRecipient = new MessageRecipient();
            messageRecipient.MessageID = messageID;
            messageRecipient.UserID = userID;
            messageRecipient.MessageStateID = messageStateID;
            return messageRecipient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Int32 _MessageID;
        partial void OnMessageIDChanging(global::System.Int32 value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageStateID
        {
            get
            {
                return _MessageStateID;
            }
            set
            {
                OnMessageStateIDChanging(value);
                ReportPropertyChanging("MessageStateID");
                _MessageStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageStateID");
                OnMessageStateIDChanged();
            }
        }
        private global::System.Int32 _MessageStateID;
        partial void OnMessageStateIDChanging(global::System.Int32 value);
        partial void OnMessageStateIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_MessageRecipient_Message", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("TaxiGuardianModel.FK_MessageRecipient_Message", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("TaxiGuardianModel.FK_MessageRecipient_Message", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("TaxiGuardianModel.FK_MessageRecipient_Message", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("TaxiGuardianModel.FK_MessageRecipient_Message", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_MessageRecipient_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_MessageRecipient_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_MessageRecipient_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_MessageRecipient_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_MessageRecipient_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="MessageState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageState object.
        /// </summary>
        /// <param name="messageStateID">Initial value of the MessageStateID property.</param>
        /// <param name="stateName">Initial value of the StateName property.</param>
        public static MessageState CreateMessageState(global::System.Int32 messageStateID, global::System.String stateName)
        {
            MessageState messageState = new MessageState();
            messageState.MessageStateID = messageStateID;
            messageState.StateName = stateName;
            return messageState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageStateID
        {
            get
            {
                return _MessageStateID;
            }
            set
            {
                if (_MessageStateID != value)
                {
                    OnMessageStateIDChanging(value);
                    ReportPropertyChanging("MessageStateID");
                    _MessageStateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageStateID");
                    OnMessageStateIDChanged();
                }
            }
        }
        private global::System.Int32 _MessageStateID;
        partial void OnMessageStateIDChanging(global::System.Int32 value);
        partial void OnMessageStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Message_MessageState", "Message")]
        public EntityCollection<Message> Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("TaxiGuardianModel.FK_Message_MessageState", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("TaxiGuardianModel.FK_Message_MessageState", "Message", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="parameterID">Initial value of the ParameterID property.</param>
        /// <param name="parameterName">Initial value of the ParameterName property.</param>
        /// <param name="parameterKey">Initial value of the ParameterKey property.</param>
        /// <param name="isMobile">Initial value of the IsMobile property.</param>
        public static Parameter CreateParameter(global::System.Int32 parameterID, global::System.String parameterName, global::System.String parameterKey, global::System.Boolean isMobile)
        {
            Parameter parameter = new Parameter();
            parameter.ParameterID = parameterID;
            parameter.ParameterName = parameterName;
            parameter.ParameterKey = parameterKey;
            parameter.IsMobile = isMobile;
            return parameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterID
        {
            get
            {
                return _ParameterID;
            }
            set
            {
                if (_ParameterID != value)
                {
                    OnParameterIDChanging(value);
                    ReportPropertyChanging("ParameterID");
                    _ParameterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParameterID");
                    OnParameterIDChanged();
                }
            }
        }
        private global::System.Int32 _ParameterID;
        partial void OnParameterIDChanging(global::System.Int32 value);
        partial void OnParameterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParameterName
        {
            get
            {
                return _ParameterName;
            }
            set
            {
                OnParameterNameChanging(value);
                ReportPropertyChanging("ParameterName");
                _ParameterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParameterName");
                OnParameterNameChanged();
            }
        }
        private global::System.String _ParameterName;
        partial void OnParameterNameChanging(global::System.String value);
        partial void OnParameterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParameterKey
        {
            get
            {
                return _ParameterKey;
            }
            set
            {
                OnParameterKeyChanging(value);
                ReportPropertyChanging("ParameterKey");
                _ParameterKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParameterKey");
                OnParameterKeyChanged();
            }
        }
        private global::System.String _ParameterKey;
        partial void OnParameterKeyChanging(global::System.String value);
        partial void OnParameterKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParameterValue
        {
            get
            {
                return _ParameterValue;
            }
            set
            {
                OnParameterValueChanging(value);
                ReportPropertyChanging("ParameterValue");
                _ParameterValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParameterValue");
                OnParameterValueChanged();
            }
        }
        private global::System.String _ParameterValue;
        partial void OnParameterValueChanging(global::System.String value);
        partial void OnParameterValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMobile
        {
            get
            {
                return _IsMobile;
            }
            set
            {
                OnIsMobileChanging(value);
                ReportPropertyChanging("IsMobile");
                _IsMobile = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMobile");
                OnIsMobileChanged();
            }
        }
        private global::System.Boolean _IsMobile;
        partial void OnIsMobileChanging(global::System.Boolean value);
        partial void OnIsMobileChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="PartnerCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PartnerCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartnerCompany object.
        /// </summary>
        /// <param name="partnerCompanyID">Initial value of the PartnerCompanyID property.</param>
        /// <param name="partnerCompanyName">Initial value of the PartnerCompanyName property.</param>
        /// <param name="cuit">Initial value of the Cuit property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static PartnerCompany CreatePartnerCompany(global::System.Int32 partnerCompanyID, global::System.String partnerCompanyName, global::System.String cuit, global::System.DateTime creationDate, global::System.Boolean isActive)
        {
            PartnerCompany partnerCompany = new PartnerCompany();
            partnerCompany.PartnerCompanyID = partnerCompanyID;
            partnerCompany.PartnerCompanyName = partnerCompanyName;
            partnerCompany.Cuit = cuit;
            partnerCompany.CreationDate = creationDate;
            partnerCompany.IsActive = isActive;
            return partnerCompany;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartnerCompanyID
        {
            get
            {
                return _PartnerCompanyID;
            }
            set
            {
                if (_PartnerCompanyID != value)
                {
                    OnPartnerCompanyIDChanging(value);
                    ReportPropertyChanging("PartnerCompanyID");
                    _PartnerCompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartnerCompanyID");
                    OnPartnerCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _PartnerCompanyID;
        partial void OnPartnerCompanyIDChanging(global::System.Int32 value);
        partial void OnPartnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartnerCompanyName
        {
            get
            {
                return _PartnerCompanyName;
            }
            set
            {
                OnPartnerCompanyNameChanging(value);
                ReportPropertyChanging("PartnerCompanyName");
                _PartnerCompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PartnerCompanyName");
                OnPartnerCompanyNameChanged();
            }
        }
        private global::System.String _PartnerCompanyName;
        partial void OnPartnerCompanyNameChanging(global::System.String value);
        partial void OnPartnerCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cuit
        {
            get
            {
                return _Cuit;
            }
            set
            {
                OnCuitChanging(value);
                ReportPropertyChanging("Cuit");
                _Cuit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Cuit");
                OnCuitChanged();
            }
        }
        private global::System.String _Cuit;
        partial void OnCuitChanging(global::System.String value);
        partial void OnCuitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_CompanyPartnerCompany_PartnerCompany", "CompanyPartnerCompany")]
        public EntityCollection<CompanyPartnerCompany> CompanyPartnerCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPartnerCompany>("TaxiGuardianModel.FK_CompanyPartnerCompany_PartnerCompany", "CompanyPartnerCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPartnerCompany>("TaxiGuardianModel.FK_CompanyPartnerCompany_PartnerCompany", "CompanyPartnerCompany", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="PushEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PushEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PushEvent object.
        /// </summary>
        /// <param name="pushEventID">Initial value of the PushEventID property.</param>
        /// <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        /// <param name="pushEventTypeID">Initial value of the PushEventTypeID property.</param>
        /// <param name="pushEventStateID">Initial value of the PushEventStateID property.</param>
        public static PushEvent CreatePushEvent(global::System.Int32 pushEventID, global::System.DateTime eventDateTime, global::System.Int32 pushEventTypeID, global::System.Int32 pushEventStateID)
        {
            PushEvent pushEvent = new PushEvent();
            pushEvent.PushEventID = pushEventID;
            pushEvent.EventDateTime = eventDateTime;
            pushEvent.PushEventTypeID = pushEventTypeID;
            pushEvent.PushEventStateID = pushEventStateID;
            return pushEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PushEventID
        {
            get
            {
                return _PushEventID;
            }
            set
            {
                if (_PushEventID != value)
                {
                    OnPushEventIDChanging(value);
                    ReportPropertyChanging("PushEventID");
                    _PushEventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PushEventID");
                    OnPushEventIDChanged();
                }
            }
        }
        private global::System.Int32 _PushEventID;
        partial void OnPushEventIDChanging(global::System.Int32 value);
        partial void OnPushEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDateTime
        {
            get
            {
                return _EventDateTime;
            }
            set
            {
                OnEventDateTimeChanging(value);
                ReportPropertyChanging("EventDateTime");
                _EventDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDateTime");
                OnEventDateTimeChanged();
            }
        }
        private global::System.DateTime _EventDateTime;
        partial void OnEventDateTimeChanging(global::System.DateTime value);
        partial void OnEventDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PushEventTypeID
        {
            get
            {
                return _PushEventTypeID;
            }
            set
            {
                OnPushEventTypeIDChanging(value);
                ReportPropertyChanging("PushEventTypeID");
                _PushEventTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PushEventTypeID");
                OnPushEventTypeIDChanged();
            }
        }
        private global::System.Int32 _PushEventTypeID;
        partial void OnPushEventTypeIDChanging(global::System.Int32 value);
        partial void OnPushEventTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PushEventStateID
        {
            get
            {
                return _PushEventStateID;
            }
            set
            {
                OnPushEventStateIDChanging(value);
                ReportPropertyChanging("PushEventStateID");
                _PushEventStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PushEventStateID");
                OnPushEventStateIDChanged();
            }
        }
        private global::System.Int32 _PushEventStateID;
        partial void OnPushEventStateIDChanging(global::System.Int32 value);
        partial void OnPushEventStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                OnMessageIDChanging(value);
                ReportPropertyChanging("MessageID");
                _MessageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageID");
                OnMessageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MessageID;
        partial void OnMessageIDChanging(Nullable<global::System.Int32> value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TripID
        {
            get
            {
                return _TripID;
            }
            set
            {
                OnTripIDChanging(value);
                ReportPropertyChanging("TripID");
                _TripID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripID");
                OnTripIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TripID;
        partial void OnTripIDChanging(Nullable<global::System.Int32> value);
        partial void OnTripIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TripClientID
        {
            get
            {
                return _TripClientID;
            }
            set
            {
                OnTripClientIDChanging(value);
                ReportPropertyChanging("TripClientID");
                _TripClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripClientID");
                OnTripClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TripClientID;
        partial void OnTripClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnTripClientIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEvent_Message", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("TaxiGuardianModel.FK_PushEvent_Message", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("TaxiGuardianModel.FK_PushEvent_Message", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("TaxiGuardianModel.FK_PushEvent_Message", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("TaxiGuardianModel.FK_PushEvent_Message", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEvent_PushEventState", "PushEventState")]
        public PushEventState PushEventState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEventState>("TaxiGuardianModel.FK_PushEvent_PushEventState", "PushEventState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEventState>("TaxiGuardianModel.FK_PushEvent_PushEventState", "PushEventState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PushEventState> PushEventStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEventState>("TaxiGuardianModel.FK_PushEvent_PushEventState", "PushEventState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PushEventState>("TaxiGuardianModel.FK_PushEvent_PushEventState", "PushEventState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEvent_PushEventType", "PushEventType")]
        public PushEventType PushEventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEventType>("TaxiGuardianModel.FK_PushEvent_PushEventType", "PushEventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEventType>("TaxiGuardianModel.FK_PushEvent_PushEventType", "PushEventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PushEventType> PushEventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEventType>("TaxiGuardianModel.FK_PushEvent_PushEventType", "PushEventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PushEventType>("TaxiGuardianModel.FK_PushEvent_PushEventType", "PushEventType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEvent_Trip", "Trip")]
        public Trip Trip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_PushEvent_Trip", "Trip").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_PushEvent_Trip", "Trip").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trip> TripReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_PushEvent_Trip", "Trip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trip>("TaxiGuardianModel.FK_PushEvent_Trip", "Trip", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEventUser_PushEvent", "PushEventUser")]
        public EntityCollection<PushEventUser> PushEventUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PushEventUser>("TaxiGuardianModel.FK_PushEventUser_PushEvent", "PushEventUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PushEventUser>("TaxiGuardianModel.FK_PushEventUser_PushEvent", "PushEventUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="PushEventState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PushEventState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PushEventState object.
        /// </summary>
        /// <param name="pushEventStateID">Initial value of the PushEventStateID property.</param>
        /// <param name="pushEventStateName">Initial value of the PushEventStateName property.</param>
        public static PushEventState CreatePushEventState(global::System.Int32 pushEventStateID, global::System.String pushEventStateName)
        {
            PushEventState pushEventState = new PushEventState();
            pushEventState.PushEventStateID = pushEventStateID;
            pushEventState.PushEventStateName = pushEventStateName;
            return pushEventState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PushEventStateID
        {
            get
            {
                return _PushEventStateID;
            }
            set
            {
                if (_PushEventStateID != value)
                {
                    OnPushEventStateIDChanging(value);
                    ReportPropertyChanging("PushEventStateID");
                    _PushEventStateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PushEventStateID");
                    OnPushEventStateIDChanged();
                }
            }
        }
        private global::System.Int32 _PushEventStateID;
        partial void OnPushEventStateIDChanging(global::System.Int32 value);
        partial void OnPushEventStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PushEventStateName
        {
            get
            {
                return _PushEventStateName;
            }
            set
            {
                OnPushEventStateNameChanging(value);
                ReportPropertyChanging("PushEventStateName");
                _PushEventStateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PushEventStateName");
                OnPushEventStateNameChanged();
            }
        }
        private global::System.String _PushEventStateName;
        partial void OnPushEventStateNameChanging(global::System.String value);
        partial void OnPushEventStateNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEvent_PushEventState", "PushEvent")]
        public EntityCollection<PushEvent> PushEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PushEvent>("TaxiGuardianModel.FK_PushEvent_PushEventState", "PushEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PushEvent>("TaxiGuardianModel.FK_PushEvent_PushEventState", "PushEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="PushEventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PushEventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PushEventType object.
        /// </summary>
        /// <param name="pushEventTypeID">Initial value of the PushEventTypeID property.</param>
        /// <param name="pushEventTypeName">Initial value of the PushEventTypeName property.</param>
        public static PushEventType CreatePushEventType(global::System.Int32 pushEventTypeID, global::System.String pushEventTypeName)
        {
            PushEventType pushEventType = new PushEventType();
            pushEventType.PushEventTypeID = pushEventTypeID;
            pushEventType.PushEventTypeName = pushEventTypeName;
            return pushEventType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PushEventTypeID
        {
            get
            {
                return _PushEventTypeID;
            }
            set
            {
                if (_PushEventTypeID != value)
                {
                    OnPushEventTypeIDChanging(value);
                    ReportPropertyChanging("PushEventTypeID");
                    _PushEventTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PushEventTypeID");
                    OnPushEventTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PushEventTypeID;
        partial void OnPushEventTypeIDChanging(global::System.Int32 value);
        partial void OnPushEventTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PushEventTypeName
        {
            get
            {
                return _PushEventTypeName;
            }
            set
            {
                OnPushEventTypeNameChanging(value);
                ReportPropertyChanging("PushEventTypeName");
                _PushEventTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PushEventTypeName");
                OnPushEventTypeNameChanged();
            }
        }
        private global::System.String _PushEventTypeName;
        partial void OnPushEventTypeNameChanging(global::System.String value);
        partial void OnPushEventTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEvent_PushEventType", "PushEvent")]
        public EntityCollection<PushEvent> PushEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PushEvent>("TaxiGuardianModel.FK_PushEvent_PushEventType", "PushEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PushEvent>("TaxiGuardianModel.FK_PushEvent_PushEventType", "PushEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="PushEventUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PushEventUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PushEventUser object.
        /// </summary>
        /// <param name="pushEventID">Initial value of the PushEventID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="pushEventUserStateID">Initial value of the PushEventUserStateID property.</param>
        /// <param name="sendRetries">Initial value of the SendRetries property.</param>
        /// <param name="processDateTime">Initial value of the ProcessDateTime property.</param>
        public static PushEventUser CreatePushEventUser(global::System.Int32 pushEventID, global::System.Int32 userID, global::System.Int32 pushEventUserStateID, global::System.Int32 sendRetries, global::System.DateTime processDateTime)
        {
            PushEventUser pushEventUser = new PushEventUser();
            pushEventUser.PushEventID = pushEventID;
            pushEventUser.UserID = userID;
            pushEventUser.PushEventUserStateID = pushEventUserStateID;
            pushEventUser.SendRetries = sendRetries;
            pushEventUser.ProcessDateTime = processDateTime;
            return pushEventUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PushEventID
        {
            get
            {
                return _PushEventID;
            }
            set
            {
                if (_PushEventID != value)
                {
                    OnPushEventIDChanging(value);
                    ReportPropertyChanging("PushEventID");
                    _PushEventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PushEventID");
                    OnPushEventIDChanged();
                }
            }
        }
        private global::System.Int32 _PushEventID;
        partial void OnPushEventIDChanging(global::System.Int32 value);
        partial void OnPushEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PushEventUserStateID
        {
            get
            {
                return _PushEventUserStateID;
            }
            set
            {
                OnPushEventUserStateIDChanging(value);
                ReportPropertyChanging("PushEventUserStateID");
                _PushEventUserStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PushEventUserStateID");
                OnPushEventUserStateIDChanged();
            }
        }
        private global::System.Int32 _PushEventUserStateID;
        partial void OnPushEventUserStateIDChanging(global::System.Int32 value);
        partial void OnPushEventUserStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SendRetries
        {
            get
            {
                return _SendRetries;
            }
            set
            {
                OnSendRetriesChanging(value);
                ReportPropertyChanging("SendRetries");
                _SendRetries = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendRetries");
                OnSendRetriesChanged();
            }
        }
        private global::System.Int32 _SendRetries;
        partial void OnSendRetriesChanging(global::System.Int32 value);
        partial void OnSendRetriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ProcessDateTime
        {
            get
            {
                return _ProcessDateTime;
            }
            set
            {
                OnProcessDateTimeChanging(value);
                ReportPropertyChanging("ProcessDateTime");
                _ProcessDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessDateTime");
                OnProcessDateTimeChanged();
            }
        }
        private global::System.DateTime _ProcessDateTime;
        partial void OnProcessDateTimeChanging(global::System.DateTime value);
        partial void OnProcessDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEventUser_PushEvent", "PushEvent")]
        public PushEvent PushEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEvent>("TaxiGuardianModel.FK_PushEventUser_PushEvent", "PushEvent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEvent>("TaxiGuardianModel.FK_PushEventUser_PushEvent", "PushEvent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PushEvent> PushEventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEvent>("TaxiGuardianModel.FK_PushEventUser_PushEvent", "PushEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PushEvent>("TaxiGuardianModel.FK_PushEventUser_PushEvent", "PushEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEventUser_PushEventUserState", "PushEventUserState")]
        public PushEventUserState PushEventUserState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEventUserState>("TaxiGuardianModel.FK_PushEventUser_PushEventUserState", "PushEventUserState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEventUserState>("TaxiGuardianModel.FK_PushEventUser_PushEventUserState", "PushEventUserState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PushEventUserState> PushEventUserStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PushEventUserState>("TaxiGuardianModel.FK_PushEventUser_PushEventUserState", "PushEventUserState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PushEventUserState>("TaxiGuardianModel.FK_PushEventUser_PushEventUserState", "PushEventUserState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEventUser_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_PushEventUser_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_PushEventUser_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_PushEventUser_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_PushEventUser_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="PushEventUserState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PushEventUserState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PushEventUserState object.
        /// </summary>
        /// <param name="pushEventUserStateID">Initial value of the PushEventUserStateID property.</param>
        /// <param name="pushEventUserStateName">Initial value of the PushEventUserStateName property.</param>
        public static PushEventUserState CreatePushEventUserState(global::System.Int32 pushEventUserStateID, global::System.String pushEventUserStateName)
        {
            PushEventUserState pushEventUserState = new PushEventUserState();
            pushEventUserState.PushEventUserStateID = pushEventUserStateID;
            pushEventUserState.PushEventUserStateName = pushEventUserStateName;
            return pushEventUserState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PushEventUserStateID
        {
            get
            {
                return _PushEventUserStateID;
            }
            set
            {
                if (_PushEventUserStateID != value)
                {
                    OnPushEventUserStateIDChanging(value);
                    ReportPropertyChanging("PushEventUserStateID");
                    _PushEventUserStateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PushEventUserStateID");
                    OnPushEventUserStateIDChanged();
                }
            }
        }
        private global::System.Int32 _PushEventUserStateID;
        partial void OnPushEventUserStateIDChanging(global::System.Int32 value);
        partial void OnPushEventUserStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PushEventUserStateName
        {
            get
            {
                return _PushEventUserStateName;
            }
            set
            {
                OnPushEventUserStateNameChanging(value);
                ReportPropertyChanging("PushEventUserStateName");
                _PushEventUserStateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PushEventUserStateName");
                OnPushEventUserStateNameChanged();
            }
        }
        private global::System.String _PushEventUserStateName;
        partial void OnPushEventUserStateNameChanging(global::System.String value);
        partial void OnPushEventUserStateNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEventUser_PushEventUserState", "PushEventUser")]
        public EntityCollection<PushEventUser> PushEventUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PushEventUser>("TaxiGuardianModel.FK_PushEventUser_PushEventUserState", "PushEventUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PushEventUser>("TaxiGuardianModel.FK_PushEventUser_PushEventUserState", "PushEventUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="ReferencesPoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReferencesPoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReferencesPoint object.
        /// </summary>
        /// <param name="pointID">Initial value of the PointID property.</param>
        /// <param name="pointName">Initial value of the PointName property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static ReferencesPoint CreateReferencesPoint(global::System.Int32 pointID, global::System.String pointName, global::System.Double longitude, global::System.Double latitude, global::System.Int32 companyID)
        {
            ReferencesPoint referencesPoint = new ReferencesPoint();
            referencesPoint.PointID = pointID;
            referencesPoint.PointName = pointName;
            referencesPoint.Longitude = longitude;
            referencesPoint.Latitude = latitude;
            referencesPoint.CompanyID = companyID;
            return referencesPoint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointID
        {
            get
            {
                return _PointID;
            }
            set
            {
                if (_PointID != value)
                {
                    OnPointIDChanging(value);
                    ReportPropertyChanging("PointID");
                    _PointID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PointID");
                    OnPointIDChanged();
                }
            }
        }
        private global::System.Int32 _PointID;
        partial void OnPointIDChanging(global::System.Int32 value);
        partial void OnPointIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PointName
        {
            get
            {
                return _PointName;
            }
            set
            {
                OnPointNameChanging(value);
                ReportPropertyChanging("PointName");
                _PointName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PointName");
                OnPointNameChanged();
            }
        }
        private global::System.String _PointName;
        partial void OnPointNameChanging(global::System.String value);
        partial void OnPointNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_ReferencesPoint_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_ReferencesPoint_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_ReferencesPoint_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_ReferencesPoint_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("TaxiGuardianModel.FK_ReferencesPoint_Company", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Server")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Server : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Server object.
        /// </summary>
        /// <param name="serverID">Initial value of the ServerID property.</param>
        /// <param name="serverName">Initial value of the ServerName property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        public static Server CreateServer(global::System.Int32 serverID, global::System.String serverName, global::System.String url)
        {
            Server server = new Server();
            server.ServerID = serverID;
            server.ServerName = serverName;
            server.Url = url;
            return server;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServerID
        {
            get
            {
                return _ServerID;
            }
            set
            {
                if (_ServerID != value)
                {
                    OnServerIDChanging(value);
                    ReportPropertyChanging("ServerID");
                    _ServerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServerID");
                    OnServerIDChanged();
                }
            }
        }
        private global::System.Int32 _ServerID;
        partial void OnServerIDChanging(global::System.Int32 value);
        partial void OnServerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerName
        {
            get
            {
                return _ServerName;
            }
            set
            {
                OnServerNameChanging(value);
                ReportPropertyChanging("ServerName");
                _ServerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerName");
                OnServerNameChanged();
            }
        }
        private global::System.String _ServerName;
        partial void OnServerNameChanging(global::System.String value);
        partial void OnServerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Availability
        {
            get
            {
                return _Availability;
            }
            set
            {
                OnAvailabilityChanging(value);
                ReportPropertyChanging("Availability");
                _Availability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Availability");
                OnAvailabilityChanged();
            }
        }
        private Nullable<global::System.Double> _Availability;
        partial void OnAvailabilityChanging(Nullable<global::System.Double> value);
        partial void OnAvailabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProcessorTimeHistory
        {
            get
            {
                return _ProcessorTimeHistory;
            }
            set
            {
                OnProcessorTimeHistoryChanging(value);
                ReportPropertyChanging("ProcessorTimeHistory");
                _ProcessorTimeHistory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProcessorTimeHistory");
                OnProcessorTimeHistoryChanged();
            }
        }
        private global::System.String _ProcessorTimeHistory;
        partial void OnProcessorTimeHistoryChanging(global::System.String value);
        partial void OnProcessorTimeHistoryChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="aliasNames">Initial value of the AliasNames property.</param>
        public static State CreateState(global::System.Int32 stateID, global::System.String name, global::System.Int32 countryID, global::System.String aliasNames)
        {
            State state = new State();
            state.StateID = stateID;
            state.Name = name;
            state.CountryID = countryID;
            state.AliasNames = aliasNames;
            return state;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                if (_StateID != value)
                {
                    OnStateIDChanging(value);
                    ReportPropertyChanging("StateID");
                    _StateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateID");
                    OnStateIDChanged();
                }
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AliasNames
        {
            get
            {
                return _AliasNames;
            }
            set
            {
                OnAliasNamesChanging(value);
                ReportPropertyChanging("AliasNames");
                _AliasNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AliasNames");
                OnAliasNamesChanged();
            }
        }
        private global::System.String _AliasNames;
        partial void OnAliasNamesChanging(global::System.String value);
        partial void OnAliasNamesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_City_State", "City")]
        public EntityCollection<City> City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("TaxiGuardianModel.FK_City_State", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("TaxiGuardianModel.FK_City_State", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_State_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TaxiGuardianModel.FK_State_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TaxiGuardianModel.FK_State_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TaxiGuardianModel.FK_State_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("TaxiGuardianModel.FK_State_Country", "Country", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="TaxiState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaxiState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaxiState object.
        /// </summary>
        /// <param name="taxiStateID">Initial value of the TaxiStateID property.</param>
        /// <param name="taxiName">Initial value of the TaxiName property.</param>
        public static TaxiState CreateTaxiState(global::System.Int32 taxiStateID, global::System.String taxiName)
        {
            TaxiState taxiState = new TaxiState();
            taxiState.TaxiStateID = taxiStateID;
            taxiState.TaxiName = taxiName;
            return taxiState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxiStateID
        {
            get
            {
                return _TaxiStateID;
            }
            set
            {
                if (_TaxiStateID != value)
                {
                    OnTaxiStateIDChanging(value);
                    ReportPropertyChanging("TaxiStateID");
                    _TaxiStateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaxiStateID");
                    OnTaxiStateIDChanged();
                }
            }
        }
        private global::System.Int32 _TaxiStateID;
        partial void OnTaxiStateIDChanging(global::System.Int32 value);
        partial void OnTaxiStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxiName
        {
            get
            {
                return _TaxiName;
            }
            set
            {
                OnTaxiNameChanging(value);
                ReportPropertyChanging("TaxiName");
                _TaxiName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaxiName");
                OnTaxiNameChanged();
            }
        }
        private global::System.String _TaxiName;
        partial void OnTaxiNameChanging(global::System.String value);
        partial void OnTaxiNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_TaxiState", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TaxiGuardianModel.FK_User_TaxiState", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TaxiGuardianModel.FK_User_TaxiState", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="TrackingInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackingInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackingInfo object.
        /// </summary>
        /// <param name="trackingInfoID">Initial value of the TrackingInfoID property.</param>
        /// <param name="trackingDateTime">Initial value of the TrackingDateTime property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="speed">Initial value of the Speed property.</param>
        public static TrackingInfo CreateTrackingInfo(global::System.Int32 trackingInfoID, global::System.DateTime trackingDateTime, global::System.Int32 userID, global::System.Double speed)
        {
            TrackingInfo trackingInfo = new TrackingInfo();
            trackingInfo.TrackingInfoID = trackingInfoID;
            trackingInfo.TrackingDateTime = trackingDateTime;
            trackingInfo.UserID = userID;
            trackingInfo.Speed = speed;
            return trackingInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrackingInfoID
        {
            get
            {
                return _TrackingInfoID;
            }
            set
            {
                if (_TrackingInfoID != value)
                {
                    OnTrackingInfoIDChanging(value);
                    ReportPropertyChanging("TrackingInfoID");
                    _TrackingInfoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrackingInfoID");
                    OnTrackingInfoIDChanged();
                }
            }
        }
        private global::System.Int32 _TrackingInfoID;
        partial void OnTrackingInfoIDChanging(global::System.Int32 value);
        partial void OnTrackingInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TrackingDateTime
        {
            get
            {
                return _TrackingDateTime;
            }
            set
            {
                OnTrackingDateTimeChanging(value);
                ReportPropertyChanging("TrackingDateTime");
                _TrackingDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackingDateTime");
                OnTrackingDateTimeChanged();
            }
        }
        private global::System.DateTime _TrackingDateTime;
        partial void OnTrackingDateTimeChanging(global::System.DateTime value);
        partial void OnTrackingDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private global::System.Double _Speed;
        partial void OnSpeedChanging(global::System.Double value);
        partial void OnSpeedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_TrackingInfo_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_TrackingInfo_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_TrackingInfo_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_TrackingInfo_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_TrackingInfo_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Trip")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trip : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trip object.
        /// </summary>
        /// <param name="tripID">Initial value of the TripID property.</param>
        /// <param name="tripCreation">Initial value of the TripCreation property.</param>
        /// <param name="clientUserID">Initial value of the ClientUserID property.</param>
        /// <param name="tripStateID">Initial value of the TripStateID property.</param>
        public static Trip CreateTrip(global::System.Int32 tripID, global::System.DateTime tripCreation, global::System.Int32 clientUserID, global::System.Int32 tripStateID)
        {
            Trip trip = new Trip();
            trip.TripID = tripID;
            trip.TripCreation = tripCreation;
            trip.ClientUserID = clientUserID;
            trip.TripStateID = tripStateID;
            return trip;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripID
        {
            get
            {
                return _TripID;
            }
            set
            {
                if (_TripID != value)
                {
                    OnTripIDChanging(value);
                    ReportPropertyChanging("TripID");
                    _TripID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TripID");
                    OnTripIDChanged();
                }
            }
        }
        private global::System.Int32 _TripID;
        partial void OnTripIDChanging(global::System.Int32 value);
        partial void OnTripIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TripCreation
        {
            get
            {
                return _TripCreation;
            }
            set
            {
                OnTripCreationChanging(value);
                ReportPropertyChanging("TripCreation");
                _TripCreation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripCreation");
                OnTripCreationChanged();
            }
        }
        private global::System.DateTime _TripCreation;
        partial void OnTripCreationChanging(global::System.DateTime value);
        partial void OnTripCreationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TripFromAddress
        {
            get
            {
                return _TripFromAddress;
            }
            set
            {
                OnTripFromAddressChanging(value);
                ReportPropertyChanging("TripFromAddress");
                _TripFromAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TripFromAddress");
                OnTripFromAddressChanged();
            }
        }
        private global::System.String _TripFromAddress;
        partial void OnTripFromAddressChanging(global::System.String value);
        partial void OnTripFromAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TripToAddress
        {
            get
            {
                return _TripToAddress;
            }
            set
            {
                OnTripToAddressChanging(value);
                ReportPropertyChanging("TripToAddress");
                _TripToAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TripToAddress");
                OnTripToAddressChanged();
            }
        }
        private global::System.String _TripToAddress;
        partial void OnTripToAddressChanging(global::System.String value);
        partial void OnTripToAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientUserID
        {
            get
            {
                return _ClientUserID;
            }
            set
            {
                OnClientUserIDChanging(value);
                ReportPropertyChanging("ClientUserID");
                _ClientUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientUserID");
                OnClientUserIDChanged();
            }
        }
        private global::System.Int32 _ClientUserID;
        partial void OnClientUserIDChanging(global::System.Int32 value);
        partial void OnClientUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxiUserID
        {
            get
            {
                return _TaxiUserID;
            }
            set
            {
                OnTaxiUserIDChanging(value);
                ReportPropertyChanging("TaxiUserID");
                _TaxiUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxiUserID");
                OnTaxiUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxiUserID;
        partial void OnTaxiUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaxiUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripStateID
        {
            get
            {
                return _TripStateID;
            }
            set
            {
                OnTripStateIDChanging(value);
                ReportPropertyChanging("TripStateID");
                _TripStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripStateID");
                OnTripStateIDChanged();
            }
        }
        private global::System.Int32 _TripStateID;
        partial void OnTripStateIDChanging(global::System.Int32 value);
        partial void OnTripStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CalificationTripID
        {
            get
            {
                return _CalificationTripID;
            }
            set
            {
                OnCalificationTripIDChanging(value);
                ReportPropertyChanging("CalificationTripID");
                _CalificationTripID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalificationTripID");
                OnCalificationTripIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CalificationTripID;
        partial void OnCalificationTripIDChanging(Nullable<global::System.Int32> value);
        partial void OnCalificationTripIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyPartnerID
        {
            get
            {
                return _CompanyPartnerID;
            }
            set
            {
                OnCompanyPartnerIDChanging(value);
                ReportPropertyChanging("CompanyPartnerID");
                _CompanyPartnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyPartnerID");
                OnCompanyPartnerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyPartnerID;
        partial void OnCompanyPartnerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyPartnerIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_CalificationTrip", "CalificationTrip")]
        public CalificationTrip CalificationTrip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalificationTrip>("TaxiGuardianModel.FK_Trip_CalificationTrip", "CalificationTrip").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalificationTrip>("TaxiGuardianModel.FK_Trip_CalificationTrip", "CalificationTrip").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CalificationTrip> CalificationTripReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CalificationTrip>("TaxiGuardianModel.FK_Trip_CalificationTrip", "CalificationTrip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CalificationTrip>("TaxiGuardianModel.FK_Trip_CalificationTrip", "CalificationTrip", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEvent_Trip", "PushEvent")]
        public EntityCollection<PushEvent> PushEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PushEvent>("TaxiGuardianModel.FK_PushEvent_Trip", "PushEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PushEvent>("TaxiGuardianModel.FK_PushEvent_Trip", "PushEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_Trip", "Trip1")]
        public Trip Trip1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_Trip_Trip", "Trip1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_Trip_Trip", "Trip1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trip> Trip1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_Trip_Trip", "Trip1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trip>("TaxiGuardianModel.FK_Trip_Trip", "Trip1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_Trip", "Trip")]
        public Trip Trip2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_Trip_Trip", "Trip").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_Trip_Trip", "Trip").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trip> Trip2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_Trip_Trip", "Trip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trip>("TaxiGuardianModel.FK_Trip_Trip", "Trip", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_TripState", "TripState")]
        public TripState TripState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripState>("TaxiGuardianModel.FK_Trip_TripState", "TripState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripState>("TaxiGuardianModel.FK_Trip_TripState", "TripState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TripState> TripStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripState>("TaxiGuardianModel.FK_Trip_TripState", "TripState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TripState>("TaxiGuardianModel.FK_Trip_TripState", "TripState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_Trip_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_Trip_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_Trip_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_Trip_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_Trip_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_Trip_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_Trip_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_Trip_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_TripLog_Trip", "TripLog")]
        public EntityCollection<TripLog> TripLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TripLog>("TaxiGuardianModel.FK_TripLog_Trip", "TripLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TripLog>("TaxiGuardianModel.FK_TripLog_Trip", "TripLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="TripLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TripLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TripLog object.
        /// </summary>
        /// <param name="tripLogID">Initial value of the TripLogID property.</param>
        /// <param name="tripID">Initial value of the TripID property.</param>
        /// <param name="tripLogDateTime">Initial value of the TripLogDateTime property.</param>
        /// <param name="tripStateID">Initial value of the TripStateID property.</param>
        public static TripLog CreateTripLog(global::System.Int32 tripLogID, global::System.Int32 tripID, global::System.DateTime tripLogDateTime, global::System.Int32 tripStateID)
        {
            TripLog tripLog = new TripLog();
            tripLog.TripLogID = tripLogID;
            tripLog.TripID = tripID;
            tripLog.TripLogDateTime = tripLogDateTime;
            tripLog.TripStateID = tripStateID;
            return tripLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripLogID
        {
            get
            {
                return _TripLogID;
            }
            set
            {
                if (_TripLogID != value)
                {
                    OnTripLogIDChanging(value);
                    ReportPropertyChanging("TripLogID");
                    _TripLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TripLogID");
                    OnTripLogIDChanged();
                }
            }
        }
        private global::System.Int32 _TripLogID;
        partial void OnTripLogIDChanging(global::System.Int32 value);
        partial void OnTripLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripID
        {
            get
            {
                return _TripID;
            }
            set
            {
                OnTripIDChanging(value);
                ReportPropertyChanging("TripID");
                _TripID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripID");
                OnTripIDChanged();
            }
        }
        private global::System.Int32 _TripID;
        partial void OnTripIDChanging(global::System.Int32 value);
        partial void OnTripIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TripLogDateTime
        {
            get
            {
                return _TripLogDateTime;
            }
            set
            {
                OnTripLogDateTimeChanging(value);
                ReportPropertyChanging("TripLogDateTime");
                _TripLogDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripLogDateTime");
                OnTripLogDateTimeChanged();
            }
        }
        private global::System.DateTime _TripLogDateTime;
        partial void OnTripLogDateTimeChanging(global::System.DateTime value);
        partial void OnTripLogDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CancelUserID
        {
            get
            {
                return _CancelUserID;
            }
            set
            {
                OnCancelUserIDChanging(value);
                ReportPropertyChanging("CancelUserID");
                _CancelUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CancelUserID");
                OnCancelUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CancelUserID;
        partial void OnCancelUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnCancelUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CancelDescription
        {
            get
            {
                return _CancelDescription;
            }
            set
            {
                OnCancelDescriptionChanging(value);
                ReportPropertyChanging("CancelDescription");
                _CancelDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CancelDescription");
                OnCancelDescriptionChanged();
            }
        }
        private global::System.String _CancelDescription;
        partial void OnCancelDescriptionChanging(global::System.String value);
        partial void OnCancelDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripStateID
        {
            get
            {
                return _TripStateID;
            }
            set
            {
                OnTripStateIDChanging(value);
                ReportPropertyChanging("TripStateID");
                _TripStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripStateID");
                OnTripStateIDChanged();
            }
        }
        private global::System.Int32 _TripStateID;
        partial void OnTripStateIDChanging(global::System.Int32 value);
        partial void OnTripStateIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_TripLog_Trip", "Trip")]
        public Trip Trip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_TripLog_Trip", "Trip").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_TripLog_Trip", "Trip").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trip> TripReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("TaxiGuardianModel.FK_TripLog_Trip", "Trip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trip>("TaxiGuardianModel.FK_TripLog_Trip", "Trip", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_TripLog_TripState", "TripState")]
        public TripState TripState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripState>("TaxiGuardianModel.FK_TripLog_TripState", "TripState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripState>("TaxiGuardianModel.FK_TripLog_TripState", "TripState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TripState> TripStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TripState>("TaxiGuardianModel.FK_TripLog_TripState", "TripState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TripState>("TaxiGuardianModel.FK_TripLog_TripState", "TripState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_TripLog_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_TripLog_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_TripLog_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_TripLog_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_TripLog_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="TripState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TripState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TripState object.
        /// </summary>
        /// <param name="tripStateID">Initial value of the TripStateID property.</param>
        public static TripState CreateTripState(global::System.Int32 tripStateID)
        {
            TripState tripState = new TripState();
            tripState.TripStateID = tripStateID;
            return tripState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripStateID
        {
            get
            {
                return _TripStateID;
            }
            set
            {
                if (_TripStateID != value)
                {
                    OnTripStateIDChanging(value);
                    ReportPropertyChanging("TripStateID");
                    _TripStateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TripStateID");
                    OnTripStateIDChanged();
                }
            }
        }
        private global::System.Int32 _TripStateID;
        partial void OnTripStateIDChanging(global::System.Int32 value);
        partial void OnTripStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TripStateName
        {
            get
            {
                return _TripStateName;
            }
            set
            {
                OnTripStateNameChanging(value);
                ReportPropertyChanging("TripStateName");
                _TripStateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TripStateName");
                OnTripStateNameChanged();
            }
        }
        private global::System.String _TripStateName;
        partial void OnTripStateNameChanging(global::System.String value);
        partial void OnTripStateNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_TripState", "Trip")]
        public EntityCollection<Trip> Trip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trip>("TaxiGuardianModel.FK_Trip_TripState", "Trip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trip>("TaxiGuardianModel.FK_Trip_TripState", "Trip", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_TripLog_TripState", "TripLog")]
        public EntityCollection<TripLog> TripLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TripLog>("TaxiGuardianModel.FK_TripLog_TripState", "TripLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TripLog>("TaxiGuardianModel.FK_TripLog_TripState", "TripLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="genderID">Initial value of the GenderID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="userStatusID">Initial value of the UserStatusID property.</param>
        /// <param name="followMe">Initial value of the FollowMe property.</param>
        /// <param name="userTypeID">Initial value of the UserTypeID property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String firstName, global::System.String userName, global::System.String password, global::System.String email, global::System.Int32 genderID, global::System.Boolean isActive, global::System.DateTime creationDate, global::System.Int32 userStatusID, global::System.Boolean followMe, global::System.Int32 userTypeID)
        {
            User user = new User();
            user.UserID = userID;
            user.FirstName = firstName;
            user.UserName = userName;
            user.Password = password;
            user.Email = email;
            user.GenderID = genderID;
            user.IsActive = isActive;
            user.CreationDate = creationDate;
            user.UserStatusID = userStatusID;
            user.FollowMe = followMe;
            user.UserTypeID = userTypeID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrefixMobilePhone
        {
            get
            {
                return _PrefixMobilePhone;
            }
            set
            {
                OnPrefixMobilePhoneChanging(value);
                ReportPropertyChanging("PrefixMobilePhone");
                _PrefixMobilePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrefixMobilePhone");
                OnPrefixMobilePhoneChanged();
            }
        }
        private global::System.String _PrefixMobilePhone;
        partial void OnPrefixMobilePhoneChanging(global::System.String value);
        partial void OnPrefixMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dni
        {
            get
            {
                return _Dni;
            }
            set
            {
                OnDniChanging(value);
                ReportPropertyChanging("Dni");
                _Dni = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dni");
                OnDniChanged();
            }
        }
        private global::System.String _Dni;
        partial void OnDniChanging(global::System.String value);
        partial void OnDniChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLogin;
        partial void OnLastLoginChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderID
        {
            get
            {
                return _GenderID;
            }
            set
            {
                OnGenderIDChanging(value);
                ReportPropertyChanging("GenderID");
                _GenderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderID");
                OnGenderIDChanged();
            }
        }
        private global::System.Int32 _GenderID;
        partial void OnGenderIDChanging(global::System.Int32 value);
        partial void OnGenderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ProfilePicture
        {
            get
            {
                return StructuralObject.GetValidValue(_ProfilePicture);
            }
            set
            {
                OnProfilePictureChanging(value);
                ReportPropertyChanging("ProfilePicture");
                _ProfilePicture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfilePicture");
                OnProfilePictureChanged();
            }
        }
        private global::System.Byte[] _ProfilePicture;
        partial void OnProfilePictureChanging(global::System.Byte[] value);
        partial void OnProfilePictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserStatusID
        {
            get
            {
                return _UserStatusID;
            }
            set
            {
                OnUserStatusIDChanging(value);
                ReportPropertyChanging("UserStatusID");
                _UserStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserStatusID");
                OnUserStatusIDChanged();
            }
        }
        private global::System.Int32 _UserStatusID;
        partial void OnUserStatusIDChanging(global::System.Int32 value);
        partial void OnUserStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FollowMe
        {
            get
            {
                return _FollowMe;
            }
            set
            {
                OnFollowMeChanging(value);
                ReportPropertyChanging("FollowMe");
                _FollowMe = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowMe");
                OnFollowMeChanged();
            }
        }
        private global::System.Boolean _FollowMe;
        partial void OnFollowMeChanging(global::System.Boolean value);
        partial void OnFollowMeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPositionDateTime
        {
            get
            {
                return _LastPositionDateTime;
            }
            set
            {
                OnLastPositionDateTimeChanging(value);
                ReportPropertyChanging("LastPositionDateTime");
                _LastPositionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPositionDateTime");
                OnLastPositionDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPositionDateTime;
        partial void OnLastPositionDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPositionDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastSpeed
        {
            get
            {
                return _LastSpeed;
            }
            set
            {
                OnLastSpeedChanging(value);
                ReportPropertyChanging("LastSpeed");
                _LastSpeed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSpeed");
                OnLastSpeedChanged();
            }
        }
        private Nullable<global::System.Int32> _LastSpeed;
        partial void OnLastSpeedChanging(Nullable<global::System.Int32> value);
        partial void OnLastSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastStatusChange
        {
            get
            {
                return _LastStatusChange;
            }
            set
            {
                OnLastStatusChangeChanging(value);
                ReportPropertyChanging("LastStatusChange");
                _LastStatusChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastStatusChange");
                OnLastStatusChangeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastStatusChange;
        partial void OnLastStatusChangeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastStatusChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ProfilePictureThumb
        {
            get
            {
                return StructuralObject.GetValidValue(_ProfilePictureThumb);
            }
            set
            {
                OnProfilePictureThumbChanging(value);
                ReportPropertyChanging("ProfilePictureThumb");
                _ProfilePictureThumb = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfilePictureThumb");
                OnProfilePictureThumbChanged();
            }
        }
        private global::System.Byte[] _ProfilePictureThumb;
        partial void OnProfilePictureThumbChanging(global::System.Byte[] value);
        partial void OnProfilePictureThumbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeID
        {
            get
            {
                return _UserTypeID;
            }
            set
            {
                OnUserTypeIDChanging(value);
                ReportPropertyChanging("UserTypeID");
                _UserTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTypeID");
                OnUserTypeIDChanged();
            }
        }
        private global::System.Int32 _UserTypeID;
        partial void OnUserTypeIDChanging(global::System.Int32 value);
        partial void OnUserTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentSessionID
        {
            get
            {
                return _CurrentSessionID;
            }
            set
            {
                OnCurrentSessionIDChanging(value);
                ReportPropertyChanging("CurrentSessionID");
                _CurrentSessionID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentSessionID");
                OnCurrentSessionIDChanged();
            }
        }
        private global::System.String _CurrentSessionID;
        partial void OnCurrentSessionIDChanging(global::System.String value);
        partial void OnCurrentSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastCarID
        {
            get
            {
                return _LastCarID;
            }
            set
            {
                OnLastCarIDChanging(value);
                ReportPropertyChanging("LastCarID");
                _LastCarID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastCarID");
                OnLastCarIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LastCarID;
        partial void OnLastCarIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastCarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxiStateID
        {
            get
            {
                return _TaxiStateID;
            }
            set
            {
                OnTaxiStateIDChanging(value);
                ReportPropertyChanging("TaxiStateID");
                _TaxiStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxiStateID");
                OnTaxiStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxiStateID;
        partial void OnTaxiStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaxiStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PushDeviceRegistrationID
        {
            get
            {
                return _PushDeviceRegistrationID;
            }
            set
            {
                OnPushDeviceRegistrationIDChanging(value);
                ReportPropertyChanging("PushDeviceRegistrationID");
                _PushDeviceRegistrationID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PushDeviceRegistrationID");
                OnPushDeviceRegistrationIDChanged();
            }
        }
        private global::System.String _PushDeviceRegistrationID;
        partial void OnPushDeviceRegistrationIDChanging(global::System.String value);
        partial void OnPushDeviceRegistrationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxiGuardianVersion
        {
            get
            {
                return _TaxiGuardianVersion;
            }
            set
            {
                OnTaxiGuardianVersionChanging(value);
                ReportPropertyChanging("TaxiGuardianVersion");
                _TaxiGuardianVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxiGuardianVersion");
                OnTaxiGuardianVersionChanged();
            }
        }
        private global::System.String _TaxiGuardianVersion;
        partial void OnTaxiGuardianVersionChanging(global::System.String value);
        partial void OnTaxiGuardianVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeviceInfo
        {
            get
            {
                return _DeviceInfo;
            }
            set
            {
                OnDeviceInfoChanging(value);
                ReportPropertyChanging("DeviceInfo");
                _DeviceInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeviceInfo");
                OnDeviceInfoChanged();
            }
        }
        private global::System.String _DeviceInfo;
        partial void OnDeviceInfoChanging(global::System.String value);
        partial void OnDeviceInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AndroidVersion
        {
            get
            {
                return _AndroidVersion;
            }
            set
            {
                OnAndroidVersionChanging(value);
                ReportPropertyChanging("AndroidVersion");
                _AndroidVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AndroidVersion");
                OnAndroidVersionChanged();
            }
        }
        private global::System.String _AndroidVersion;
        partial void OnAndroidVersionChanging(global::System.String value);
        partial void OnAndroidVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SignInToken
        {
            get
            {
                return _SignInToken;
            }
            set
            {
                OnSignInTokenChanging(value);
                ReportPropertyChanging("SignInToken");
                _SignInToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SignInToken");
                OnSignInTokenChanged();
            }
        }
        private global::System.String _SignInToken;
        partial void OnSignInTokenChanging(global::System.String value);
        partial void OnSignInTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SignInTokenDate
        {
            get
            {
                return _SignInTokenDate;
            }
            set
            {
                OnSignInTokenDateChanging(value);
                ReportPropertyChanging("SignInTokenDate");
                _SignInTokenDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SignInTokenDate");
                OnSignInTokenDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SignInTokenDate;
        partial void OnSignInTokenDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSignInTokenDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_Car", "Car")]
        public Car Car
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Car>("TaxiGuardianModel.FK_User_Car", "Car").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Car>("TaxiGuardianModel.FK_User_Car", "Car").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Car> CarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Car>("TaxiGuardianModel.FK_User_Car", "Car");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Car>("TaxiGuardianModel.FK_User_Car", "Car", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_User_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_User_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_User_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("TaxiGuardianModel.FK_User_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("TaxiGuardianModel.FK_User_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("TaxiGuardianModel.FK_User_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("TaxiGuardianModel.FK_User_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("TaxiGuardianModel.FK_User_Gender", "Gender", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_LoginAudit_User", "LoginAudit")]
        public EntityCollection<LoginAudit> LoginAudit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoginAudit>("TaxiGuardianModel.FK_LoginAudit_User", "LoginAudit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoginAudit>("TaxiGuardianModel.FK_LoginAudit_User", "LoginAudit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Message_User", "Message")]
        public EntityCollection<Message> Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("TaxiGuardianModel.FK_Message_User", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("TaxiGuardianModel.FK_Message_User", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_MessageRecipient_User", "MessageRecipient")]
        public EntityCollection<MessageRecipient> MessageRecipient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageRecipient>("TaxiGuardianModel.FK_MessageRecipient_User", "MessageRecipient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageRecipient>("TaxiGuardianModel.FK_MessageRecipient_User", "MessageRecipient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_PushEventUser_User", "PushEventUser")]
        public EntityCollection<PushEventUser> PushEventUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PushEventUser>("TaxiGuardianModel.FK_PushEventUser_User", "PushEventUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PushEventUser>("TaxiGuardianModel.FK_PushEventUser_User", "PushEventUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_TaxiState", "TaxiState")]
        public TaxiState TaxiState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxiState>("TaxiGuardianModel.FK_User_TaxiState", "TaxiState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxiState>("TaxiGuardianModel.FK_User_TaxiState", "TaxiState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaxiState> TaxiStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxiState>("TaxiGuardianModel.FK_User_TaxiState", "TaxiState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaxiState>("TaxiGuardianModel.FK_User_TaxiState", "TaxiState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_TrackingInfo_User", "TrackingInfo")]
        public EntityCollection<TrackingInfo> TrackingInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrackingInfo>("TaxiGuardianModel.FK_TrackingInfo_User", "TrackingInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrackingInfo>("TaxiGuardianModel.FK_TrackingInfo_User", "TrackingInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_User", "Trip")]
        public EntityCollection<Trip> Trip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trip>("TaxiGuardianModel.FK_Trip_User", "Trip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trip>("TaxiGuardianModel.FK_Trip_User", "Trip", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Trip_User1", "Trip")]
        public EntityCollection<Trip> Trip1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trip>("TaxiGuardianModel.FK_Trip_User1", "Trip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trip>("TaxiGuardianModel.FK_Trip_User1", "Trip", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_TripLog_User", "TripLog")]
        public EntityCollection<TripLog> TripLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TripLog>("TaxiGuardianModel.FK_TripLog_User", "TripLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TripLog>("TaxiGuardianModel.FK_TripLog_User", "TripLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_UserStatus", "UserStatus")]
        public UserStatus UserStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserStatus>("TaxiGuardianModel.FK_User_UserStatus", "UserStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserStatus>("TaxiGuardianModel.FK_User_UserStatus", "UserStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserStatus> UserStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserStatus>("TaxiGuardianModel.FK_User_UserStatus", "UserStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserStatus>("TaxiGuardianModel.FK_User_UserStatus", "UserStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_UserType", "UserType")]
        public UserType UserType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("TaxiGuardianModel.FK_User_UserType", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("TaxiGuardianModel.FK_User_UserType", "UserType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> UserTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("TaxiGuardianModel.FK_User_UserType", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("TaxiGuardianModel.FK_User_UserType", "UserType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserCar_User", "UserCar")]
        public EntityCollection<UserCar> UserCar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCar>("TaxiGuardianModel.FK_UserCar_User", "UserCar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCar>("TaxiGuardianModel.FK_UserCar_User", "UserCar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserFleet_User", "UserFleet")]
        public EntityCollection<UserFleet> UserFleet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserFleet>("TaxiGuardianModel.FK_UserFleet_User", "UserFleet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserFleet>("TaxiGuardianModel.FK_UserFleet_User", "UserFleet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="UserCar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserCar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserCar object.
        /// </summary>
        /// <param name="userCarID">Initial value of the UserCarID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="carID">Initial value of the CarID property.</param>
        /// <param name="userCarDatetime">Initial value of the UserCarDatetime property.</param>
        public static UserCar CreateUserCar(global::System.Int32 userCarID, global::System.Int32 userID, global::System.Int32 carID, global::System.DateTime userCarDatetime)
        {
            UserCar userCar = new UserCar();
            userCar.UserCarID = userCarID;
            userCar.UserID = userID;
            userCar.CarID = carID;
            userCar.UserCarDatetime = userCarDatetime;
            return userCar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserCarID
        {
            get
            {
                return _UserCarID;
            }
            set
            {
                if (_UserCarID != value)
                {
                    OnUserCarIDChanging(value);
                    ReportPropertyChanging("UserCarID");
                    _UserCarID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserCarID");
                    OnUserCarIDChanged();
                }
            }
        }
        private global::System.Int32 _UserCarID;
        partial void OnUserCarIDChanging(global::System.Int32 value);
        partial void OnUserCarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarID
        {
            get
            {
                return _CarID;
            }
            set
            {
                OnCarIDChanging(value);
                ReportPropertyChanging("CarID");
                _CarID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CarID");
                OnCarIDChanged();
            }
        }
        private global::System.Int32 _CarID;
        partial void OnCarIDChanging(global::System.Int32 value);
        partial void OnCarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UserCarDatetime
        {
            get
            {
                return _UserCarDatetime;
            }
            set
            {
                OnUserCarDatetimeChanging(value);
                ReportPropertyChanging("UserCarDatetime");
                _UserCarDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCarDatetime");
                OnUserCarDatetimeChanged();
            }
        }
        private global::System.DateTime _UserCarDatetime;
        partial void OnUserCarDatetimeChanging(global::System.DateTime value);
        partial void OnUserCarDatetimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserCar_Car", "Car")]
        public Car Car
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Car>("TaxiGuardianModel.FK_UserCar_Car", "Car").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Car>("TaxiGuardianModel.FK_UserCar_Car", "Car").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Car> CarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Car>("TaxiGuardianModel.FK_UserCar_Car", "Car");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Car>("TaxiGuardianModel.FK_UserCar_Car", "Car", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserCar_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_UserCar_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_UserCar_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_UserCar_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_UserCar_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="UserFleet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFleet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserFleet object.
        /// </summary>
        /// <param name="fleetID">Initial value of the FleetID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="assignmentDate">Initial value of the AssignmentDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static UserFleet CreateUserFleet(global::System.Int32 fleetID, global::System.Int32 userID, global::System.DateTime assignmentDate, global::System.Boolean isActive)
        {
            UserFleet userFleet = new UserFleet();
            userFleet.FleetID = fleetID;
            userFleet.UserID = userID;
            userFleet.AssignmentDate = assignmentDate;
            userFleet.IsActive = isActive;
            return userFleet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FleetID
        {
            get
            {
                return _FleetID;
            }
            set
            {
                if (_FleetID != value)
                {
                    OnFleetIDChanging(value);
                    ReportPropertyChanging("FleetID");
                    _FleetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FleetID");
                    OnFleetIDChanged();
                }
            }
        }
        private global::System.Int32 _FleetID;
        partial void OnFleetIDChanging(global::System.Int32 value);
        partial void OnFleetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AssignmentDate
        {
            get
            {
                return _AssignmentDate;
            }
            set
            {
                OnAssignmentDateChanging(value);
                ReportPropertyChanging("AssignmentDate");
                _AssignmentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignmentDate");
                OnAssignmentDateChanged();
            }
        }
        private global::System.DateTime _AssignmentDate;
        partial void OnAssignmentDateChanging(global::System.DateTime value);
        partial void OnAssignmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserFleet_Fleet", "Fleet")]
        public Fleet Fleet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fleet>("TaxiGuardianModel.FK_UserFleet_Fleet", "Fleet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fleet>("TaxiGuardianModel.FK_UserFleet_Fleet", "Fleet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fleet> FleetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fleet>("TaxiGuardianModel.FK_UserFleet_Fleet", "Fleet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fleet>("TaxiGuardianModel.FK_UserFleet_Fleet", "Fleet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserFleet_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_UserFleet_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_UserFleet_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TaxiGuardianModel.FK_UserFleet_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TaxiGuardianModel.FK_UserFleet_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="UserPartnerCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPartnerCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPartnerCompany object.
        /// </summary>
        /// <param name="companyPartnerCompanyID">Initial value of the CompanyPartnerCompanyID property.</param>
        /// <param name="dni">Initial value of the Dni property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static UserPartnerCompany CreateUserPartnerCompany(global::System.Int32 companyPartnerCompanyID, global::System.String dni, global::System.Boolean isActive)
        {
            UserPartnerCompany userPartnerCompany = new UserPartnerCompany();
            userPartnerCompany.CompanyPartnerCompanyID = companyPartnerCompanyID;
            userPartnerCompany.Dni = dni;
            userPartnerCompany.IsActive = isActive;
            return userPartnerCompany;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyPartnerCompanyID
        {
            get
            {
                return _CompanyPartnerCompanyID;
            }
            set
            {
                if (_CompanyPartnerCompanyID != value)
                {
                    OnCompanyPartnerCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyPartnerCompanyID");
                    _CompanyPartnerCompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyPartnerCompanyID");
                    OnCompanyPartnerCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyPartnerCompanyID;
        partial void OnCompanyPartnerCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyPartnerCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Dni
        {
            get
            {
                return _Dni;
            }
            set
            {
                if (_Dni != value)
                {
                    OnDniChanging(value);
                    ReportPropertyChanging("Dni");
                    _Dni = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Dni");
                    OnDniChanged();
                }
            }
        }
        private global::System.String _Dni;
        partial void OnDniChanging(global::System.String value);
        partial void OnDniChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_UserPartnerCompany_CompanyPartnerCompany", "CompanyPartnerCompany")]
        public CompanyPartnerCompany CompanyPartnerCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPartnerCompany>("TaxiGuardianModel.FK_UserPartnerCompany_CompanyPartnerCompany", "CompanyPartnerCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPartnerCompany>("TaxiGuardianModel.FK_UserPartnerCompany_CompanyPartnerCompany", "CompanyPartnerCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyPartnerCompany> CompanyPartnerCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPartnerCompany>("TaxiGuardianModel.FK_UserPartnerCompany_CompanyPartnerCompany", "CompanyPartnerCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyPartnerCompany>("TaxiGuardianModel.FK_UserPartnerCompany_CompanyPartnerCompany", "CompanyPartnerCompany", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="UserStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserStatus object.
        /// </summary>
        /// <param name="userStatusID">Initial value of the UserStatusID property.</param>
        /// <param name="userStatusName">Initial value of the UserStatusName property.</param>
        public static UserStatus CreateUserStatus(global::System.Int32 userStatusID, global::System.String userStatusName)
        {
            UserStatus userStatus = new UserStatus();
            userStatus.UserStatusID = userStatusID;
            userStatus.UserStatusName = userStatusName;
            return userStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserStatusID
        {
            get
            {
                return _UserStatusID;
            }
            set
            {
                if (_UserStatusID != value)
                {
                    OnUserStatusIDChanging(value);
                    ReportPropertyChanging("UserStatusID");
                    _UserStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserStatusID");
                    OnUserStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _UserStatusID;
        partial void OnUserStatusIDChanging(global::System.Int32 value);
        partial void OnUserStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserStatusName
        {
            get
            {
                return _UserStatusName;
            }
            set
            {
                OnUserStatusNameChanging(value);
                ReportPropertyChanging("UserStatusName");
                _UserStatusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserStatusName");
                OnUserStatusNameChanged();
            }
        }
        private global::System.String _UserStatusName;
        partial void OnUserStatusNameChanging(global::System.String value);
        partial void OnUserStatusNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_UserStatus", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TaxiGuardianModel.FK_User_UserStatus", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TaxiGuardianModel.FK_User_UserStatus", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="userTypeID">Initial value of the UserTypeID property.</param>
        /// <param name="userTypeName">Initial value of the UserTypeName property.</param>
        public static UserType CreateUserType(global::System.Int32 userTypeID, global::System.String userTypeName)
        {
            UserType userType = new UserType();
            userType.UserTypeID = userTypeID;
            userType.UserTypeName = userTypeName;
            return userType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeID
        {
            get
            {
                return _UserTypeID;
            }
            set
            {
                if (_UserTypeID != value)
                {
                    OnUserTypeIDChanging(value);
                    ReportPropertyChanging("UserTypeID");
                    _UserTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserTypeID");
                    OnUserTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _UserTypeID;
        partial void OnUserTypeIDChanging(global::System.Int32 value);
        partial void OnUserTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserTypeName
        {
            get
            {
                return _UserTypeName;
            }
            set
            {
                OnUserTypeNameChanging(value);
                ReportPropertyChanging("UserTypeName");
                _UserTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserTypeName");
                OnUserTypeNameChanged();
            }
        }
        private global::System.String _UserTypeName;
        partial void OnUserTypeNameChanging(global::System.String value);
        partial void OnUserTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_User_UserType", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TaxiGuardianModel.FK_User_UserType", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TaxiGuardianModel.FK_User_UserType", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "MenuItemUserType", "MenuItem")]
        public EntityCollection<MenuItem> MenuItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItem>("TaxiGuardianModel.MenuItemUserType", "MenuItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItem>("TaxiGuardianModel.MenuItemUserType", "MenuItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxiGuardianModel", Name="Zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Zone object.
        /// </summary>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        /// <param name="zoneName">Initial value of the ZoneName property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        public static Zone CreateZone(global::System.Int32 zoneID, global::System.String zoneName, global::System.Int32 companyID, global::System.String color)
        {
            Zone zone = new Zone();
            zone.ZoneID = zoneID;
            zone.ZoneName = zoneName;
            zone.CompanyID = companyID;
            zone.Color = color;
            return zone;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                if (_ZoneID != value)
                {
                    OnZoneIDChanging(value);
                    ReportPropertyChanging("ZoneID");
                    _ZoneID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZoneID");
                    OnZoneIDChanged();
                }
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZoneName
        {
            get
            {
                return _ZoneName;
            }
            set
            {
                OnZoneNameChanging(value);
                ReportPropertyChanging("ZoneName");
                _ZoneName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ZoneName");
                OnZoneNameChanged();
            }
        }
        private global::System.String _ZoneName;
        partial void OnZoneNameChanging(global::System.String value);
        partial void OnZoneNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Zone_Zone", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_Zone_Zone", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_Zone_Zone", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("TaxiGuardianModel.FK_Zone_Zone", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("TaxiGuardianModel.FK_Zone_Zone", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaxiGuardianModel", "FK_Coordinate_Zone", "Coordinate")]
        public EntityCollection<Coordinate> Coordinate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coordinate>("TaxiGuardianModel.FK_Coordinate_Zone", "Coordinate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coordinate>("TaxiGuardianModel.FK_Coordinate_Zone", "Coordinate", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
